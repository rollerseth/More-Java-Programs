import org.junit.Test;
import org.junit.Assert;

public class TestIntSet {



@Test
public void test0() {
  int[] a1 = {};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test1() {
  int[] a1 = {};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test2() {
  int[] a1 = {};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test3() {
  int[] a1 = {};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test4() {
  int[] a1 = {};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test5() {
  int[] a1 = {};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test6() {
  int[] a1 = {};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test7() {
  int[] a1 = {};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test8() {
  int[] a1 = {};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test9() {
  int[] a1 = {};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test10() {
  int[] a1 = {};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test11() {
  int[] a1 = {};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test12() {
  int[] a1 = {};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test13() {
  int[] a1 = {};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test14() {
  int[] a1 = {};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test15() {
  int[] a1 = {};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test16() {
  int[] a1 = {};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test17() {
  int[] a1 = {};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test18() {
  int[] a1 = {};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test19() {
  int[] a1 = {};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test20() {
  int[] a1 = {};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test21() {
  int[] a1 = {};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test22() {
  int[] a1 = {};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test23() {
  int[] a1 = {};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test24() {
  int[] a1 = {};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test25() {
  int[] a1 = {};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test26() {
  int[] a1 = {};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test27() {
  int[] a1 = {};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test28() {
  int[] a1 = {};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test29() {
  int[] a1 = {};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test30() {
  int[] a1 = {};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test31() {
  int[] a1 = {};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test32() {
  int[] a1 = {1};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test33() {
  int[] a1 = {1};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test34() {
  int[] a1 = {1};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test35() {
  int[] a1 = {1};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test36() {
  int[] a1 = {1};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test37() {
  int[] a1 = {1};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test38() {
  int[] a1 = {1};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test39() {
  int[] a1 = {1};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test40() {
  int[] a1 = {1};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test41() {
  int[] a1 = {1};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test42() {
  int[] a1 = {1};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test43() {
  int[] a1 = {1};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test44() {
  int[] a1 = {1};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test45() {
  int[] a1 = {1};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test46() {
  int[] a1 = {1};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test47() {
  int[] a1 = {1};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test48() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test49() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test50() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test51() {
  int[] a1 = {1};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test52() {
  int[] a1 = {1};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test53() {
  int[] a1 = {1};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test54() {
  int[] a1 = {1};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test55() {
  int[] a1 = {1};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test56() {
  int[] a1 = {1};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test57() {
  int[] a1 = {1};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test58() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test59() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test60() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test61() {
  int[] a1 = {1};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test62() {
  int[] a1 = {1};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test63() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test64() {
  int[] a1 = {2};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test65() {
  int[] a1 = {2};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test66() {
  int[] a1 = {2};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test67() {
  int[] a1 = {2};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test68() {
  int[] a1 = {2};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test69() {
  int[] a1 = {2};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test70() {
  int[] a1 = {2};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test71() {
  int[] a1 = {2};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test72() {
  int[] a1 = {2};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test73() {
  int[] a1 = {2};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test74() {
  int[] a1 = {2};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test75() {
  int[] a1 = {2};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test76() {
  int[] a1 = {2};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test77() {
  int[] a1 = {2};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test78() {
  int[] a1 = {2};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test79() {
  int[] a1 = {2};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test80() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test81() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test82() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test83() {
  int[] a1 = {2};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test84() {
  int[] a1 = {2};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test85() {
  int[] a1 = {2};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test86() {
  int[] a1 = {2};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test87() {
  int[] a1 = {2};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test88() {
  int[] a1 = {2};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test89() {
  int[] a1 = {2};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test90() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test91() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test92() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test93() {
  int[] a1 = {2};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test94() {
  int[] a1 = {2};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test95() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test96() {
  int[] a1 = {3};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test97() {
  int[] a1 = {3};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test98() {
  int[] a1 = {3};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test99() {
  int[] a1 = {3};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test100() {
  int[] a1 = {3};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test101() {
  int[] a1 = {3};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test102() {
  int[] a1 = {3};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test103() {
  int[] a1 = {3};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test104() {
  int[] a1 = {3};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test105() {
  int[] a1 = {3};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test106() {
  int[] a1 = {3};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test107() {
  int[] a1 = {3};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test108() {
  int[] a1 = {3};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test109() {
  int[] a1 = {3};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test110() {
  int[] a1 = {3};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test111() {
  int[] a1 = {3};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test112() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test113() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test114() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test115() {
  int[] a1 = {3};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test116() {
  int[] a1 = {3};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test117() {
  int[] a1 = {3};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test118() {
  int[] a1 = {3};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test119() {
  int[] a1 = {3};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test120() {
  int[] a1 = {3};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test121() {
  int[] a1 = {3};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test122() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test123() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test124() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test125() {
  int[] a1 = {3};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test126() {
  int[] a1 = {3};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test127() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test128() {
  int[] a1 = {4};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test129() {
  int[] a1 = {4};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test130() {
  int[] a1 = {4};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test131() {
  int[] a1 = {4};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test132() {
  int[] a1 = {4};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test133() {
  int[] a1 = {4};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test134() {
  int[] a1 = {4};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test135() {
  int[] a1 = {4};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test136() {
  int[] a1 = {4};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test137() {
  int[] a1 = {4};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test138() {
  int[] a1 = {4};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test139() {
  int[] a1 = {4};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test140() {
  int[] a1 = {4};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test141() {
  int[] a1 = {4};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test142() {
  int[] a1 = {4};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test143() {
  int[] a1 = {4};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test144() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test145() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test146() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test147() {
  int[] a1 = {4};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test148() {
  int[] a1 = {4};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test149() {
  int[] a1 = {4};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test150() {
  int[] a1 = {4};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test151() {
  int[] a1 = {4};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test152() {
  int[] a1 = {4};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test153() {
  int[] a1 = {4};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test154() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test155() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test156() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test157() {
  int[] a1 = {4};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test158() {
  int[] a1 = {4};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test159() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test160() {
  int[] a1 = {5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test161() {
  int[] a1 = {5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test162() {
  int[] a1 = {5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test163() {
  int[] a1 = {5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test164() {
  int[] a1 = {5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test165() {
  int[] a1 = {5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test166() {
  int[] a1 = {5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test167() {
  int[] a1 = {5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test168() {
  int[] a1 = {5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test169() {
  int[] a1 = {5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test170() {
  int[] a1 = {5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test171() {
  int[] a1 = {5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test172() {
  int[] a1 = {5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test173() {
  int[] a1 = {5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test174() {
  int[] a1 = {5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test175() {
  int[] a1 = {5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test176() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test177() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test178() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test179() {
  int[] a1 = {5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test180() {
  int[] a1 = {5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test181() {
  int[] a1 = {5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test182() {
  int[] a1 = {5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test183() {
  int[] a1 = {5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test184() {
  int[] a1 = {5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test185() {
  int[] a1 = {5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test186() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test187() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test188() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test189() {
  int[] a1 = {5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test190() {
  int[] a1 = {5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test191() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test192() {
  int[] a1 = {1, 2};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test193() {
  int[] a1 = {1, 2};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test194() {
  int[] a1 = {1, 2};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test195() {
  int[] a1 = {1, 2};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test196() {
  int[] a1 = {1, 2};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test197() {
  int[] a1 = {1, 2};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test198() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test199() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test200() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test201() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test202() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test203() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test204() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test205() {
  int[] a1 = {1, 2};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test206() {
  int[] a1 = {1, 2};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test207() {
  int[] a1 = {1, 2};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test208() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test209() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test210() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test211() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test212() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test213() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test214() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test215() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test216() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test217() {
  int[] a1 = {1, 2};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test218() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test219() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test220() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test221() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test222() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test223() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test224() {
  int[] a1 = {1, 3};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test225() {
  int[] a1 = {1, 3};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test226() {
  int[] a1 = {1, 3};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test227() {
  int[] a1 = {1, 3};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test228() {
  int[] a1 = {1, 3};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test229() {
  int[] a1 = {1, 3};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test230() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test231() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test232() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test233() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test234() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test235() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test236() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test237() {
  int[] a1 = {1, 3};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test238() {
  int[] a1 = {1, 3};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test239() {
  int[] a1 = {1, 3};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test240() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test241() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test242() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test243() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test244() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test245() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test246() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test247() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test248() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test249() {
  int[] a1 = {1, 3};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test250() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test251() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test252() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test253() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test254() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test255() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test256() {
  int[] a1 = {1, 4};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test257() {
  int[] a1 = {1, 4};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test258() {
  int[] a1 = {1, 4};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test259() {
  int[] a1 = {1, 4};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test260() {
  int[] a1 = {1, 4};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test261() {
  int[] a1 = {1, 4};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test262() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test263() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test264() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test265() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test266() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test267() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test268() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test269() {
  int[] a1 = {1, 4};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test270() {
  int[] a1 = {1, 4};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test271() {
  int[] a1 = {1, 4};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test272() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test273() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test274() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test275() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test276() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test277() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test278() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test279() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test280() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test281() {
  int[] a1 = {1, 4};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test282() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test283() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test284() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test285() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test286() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test287() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test288() {
  int[] a1 = {1, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test289() {
  int[] a1 = {1, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test290() {
  int[] a1 = {1, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test291() {
  int[] a1 = {1, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test292() {
  int[] a1 = {1, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test293() {
  int[] a1 = {1, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test294() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test295() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test296() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test297() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test298() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test299() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test300() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test301() {
  int[] a1 = {1, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test302() {
  int[] a1 = {1, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test303() {
  int[] a1 = {1, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test304() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test305() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test306() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test307() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test308() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test309() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test310() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test311() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test312() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test313() {
  int[] a1 = {1, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test314() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test315() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test316() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test317() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test318() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test319() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test320() {
  int[] a1 = {2, 3};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test321() {
  int[] a1 = {2, 3};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test322() {
  int[] a1 = {2, 3};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test323() {
  int[] a1 = {2, 3};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test324() {
  int[] a1 = {2, 3};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test325() {
  int[] a1 = {2, 3};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test326() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test327() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test328() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test329() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test330() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test331() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test332() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test333() {
  int[] a1 = {2, 3};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test334() {
  int[] a1 = {2, 3};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test335() {
  int[] a1 = {2, 3};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test336() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test337() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test338() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test339() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test340() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test341() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test342() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test343() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test344() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test345() {
  int[] a1 = {2, 3};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test346() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test347() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test348() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test349() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test350() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test351() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test352() {
  int[] a1 = {2, 4};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test353() {
  int[] a1 = {2, 4};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test354() {
  int[] a1 = {2, 4};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test355() {
  int[] a1 = {2, 4};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test356() {
  int[] a1 = {2, 4};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test357() {
  int[] a1 = {2, 4};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test358() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test359() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test360() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test361() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test362() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test363() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test364() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test365() {
  int[] a1 = {2, 4};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test366() {
  int[] a1 = {2, 4};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test367() {
  int[] a1 = {2, 4};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test368() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test369() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test370() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test371() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test372() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test373() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test374() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test375() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test376() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test377() {
  int[] a1 = {2, 4};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test378() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test379() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test380() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test381() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test382() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test383() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test384() {
  int[] a1 = {2, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test385() {
  int[] a1 = {2, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test386() {
  int[] a1 = {2, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test387() {
  int[] a1 = {2, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test388() {
  int[] a1 = {2, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test389() {
  int[] a1 = {2, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test390() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test391() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test392() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test393() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test394() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test395() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test396() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test397() {
  int[] a1 = {2, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test398() {
  int[] a1 = {2, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test399() {
  int[] a1 = {2, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test400() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test401() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test402() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test403() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test404() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test405() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test406() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test407() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test408() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test409() {
  int[] a1 = {2, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test410() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test411() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test412() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test413() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test414() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test415() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test416() {
  int[] a1 = {3, 4};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test417() {
  int[] a1 = {3, 4};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test418() {
  int[] a1 = {3, 4};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test419() {
  int[] a1 = {3, 4};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test420() {
  int[] a1 = {3, 4};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test421() {
  int[] a1 = {3, 4};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test422() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test423() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test424() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test425() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test426() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test427() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test428() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test429() {
  int[] a1 = {3, 4};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test430() {
  int[] a1 = {3, 4};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test431() {
  int[] a1 = {3, 4};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test432() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test433() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test434() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test435() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test436() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test437() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test438() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test439() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test440() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test441() {
  int[] a1 = {3, 4};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test442() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test443() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test444() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test445() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test446() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test447() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test448() {
  int[] a1 = {3, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test449() {
  int[] a1 = {3, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test450() {
  int[] a1 = {3, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test451() {
  int[] a1 = {3, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test452() {
  int[] a1 = {3, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test453() {
  int[] a1 = {3, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test454() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test455() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test456() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test457() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test458() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test459() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test460() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test461() {
  int[] a1 = {3, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test462() {
  int[] a1 = {3, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test463() {
  int[] a1 = {3, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test464() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test465() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test466() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test467() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test468() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test469() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test470() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test471() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test472() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test473() {
  int[] a1 = {3, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test474() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test475() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test476() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test477() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test478() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test479() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test480() {
  int[] a1 = {4, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test481() {
  int[] a1 = {4, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test482() {
  int[] a1 = {4, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test483() {
  int[] a1 = {4, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test484() {
  int[] a1 = {4, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test485() {
  int[] a1 = {4, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test486() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test487() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test488() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test489() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test490() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test491() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test492() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test493() {
  int[] a1 = {4, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test494() {
  int[] a1 = {4, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test495() {
  int[] a1 = {4, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test496() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test497() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test498() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test499() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test500() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test501() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test502() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test503() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test504() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test505() {
  int[] a1 = {4, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test506() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test507() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test508() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test509() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test510() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test511() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test512() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test513() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test514() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test515() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test516() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test517() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test518() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test519() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test520() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test521() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test522() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test523() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test524() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test525() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test526() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test527() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test528() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test529() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test530() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test531() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test532() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test533() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test534() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test535() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test536() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test537() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test538() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test539() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test540() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test541() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test542() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test543() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test544() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test545() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test546() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test547() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test548() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test549() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test550() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test551() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test552() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test553() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test554() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test555() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test556() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test557() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test558() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test559() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test560() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test561() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test562() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test563() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test564() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test565() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test566() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test567() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test568() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test569() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test570() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test571() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test572() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test573() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test574() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test575() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test576() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test577() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test578() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test579() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test580() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test581() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test582() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test583() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test584() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test585() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test586() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test587() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test588() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test589() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test590() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test591() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test592() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test593() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test594() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test595() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test596() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test597() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test598() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test599() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test600() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test601() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test602() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test603() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test604() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test605() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test606() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test607() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test608() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test609() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test610() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test611() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test612() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test613() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test614() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test615() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test616() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test617() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test618() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test619() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test620() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test621() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test622() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test623() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test624() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test625() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test626() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test627() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test628() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test629() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test630() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test631() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test632() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test633() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test634() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test635() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test636() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test637() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test638() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test639() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test640() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test641() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test642() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test643() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test644() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test645() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test646() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test647() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test648() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test649() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test650() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test651() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test652() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test653() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test654() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test655() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test656() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test657() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test658() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test659() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test660() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test661() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test662() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test663() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test664() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test665() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test666() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test667() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test668() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test669() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test670() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test671() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test672() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test673() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test674() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test675() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test676() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test677() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test678() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test679() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test680() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test681() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test682() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test683() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test684() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test685() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test686() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test687() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test688() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test689() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test690() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test691() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test692() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test693() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test694() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test695() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test696() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test697() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test698() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test699() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test700() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test701() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test702() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test703() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test704() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test705() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test706() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test707() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test708() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test709() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test710() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test711() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test712() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test713() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test714() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test715() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test716() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test717() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test718() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test719() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test720() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test721() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test722() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test723() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test724() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test725() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test726() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test727() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test728() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test729() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test730() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test731() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test732() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test733() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test734() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test735() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test736() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test737() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test738() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test739() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test740() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test741() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test742() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test743() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test744() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test745() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test746() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test747() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test748() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test749() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test750() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test751() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test752() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test753() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test754() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test755() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test756() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test757() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test758() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test759() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test760() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test761() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test762() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test763() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test764() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test765() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test766() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test767() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test768() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test769() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test770() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test771() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test772() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test773() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test774() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test775() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test776() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test777() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test778() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test779() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test780() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test781() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test782() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test783() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test784() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test785() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test786() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test787() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test788() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test789() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test790() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test791() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test792() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test793() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test794() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test795() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test796() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test797() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test798() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test799() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test800() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test801() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test802() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test803() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test804() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test805() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test806() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test807() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test808() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test809() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test810() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test811() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test812() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test813() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test814() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test815() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test816() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test817() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test818() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test819() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test820() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test821() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test822() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test823() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test824() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test825() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test826() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test827() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test828() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test829() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test830() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test831() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test832() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test833() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test834() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test835() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test836() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test837() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test838() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test839() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test840() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test841() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test842() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test843() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test844() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test845() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test846() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test847() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test848() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test849() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test850() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test851() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test852() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test853() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test854() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test855() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test856() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test857() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test858() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test859() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test860() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test861() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test862() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test863() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test864() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test865() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test866() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test867() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test868() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test869() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test870() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test871() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test872() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test873() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test874() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test875() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test876() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test877() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test878() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test879() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test880() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test881() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test882() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test883() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test884() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test885() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test886() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test887() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test888() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test889() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test890() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test891() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test892() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test893() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test894() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test895() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test896() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test897() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test898() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test899() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test900() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test901() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test902() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test903() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test904() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test905() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test906() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test907() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test908() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test909() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test910() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test911() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test912() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test913() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test914() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test915() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test916() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test917() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test918() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test919() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test920() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test921() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test922() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test923() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test924() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test925() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test926() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test927() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test928() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test929() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test930() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test931() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test932() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test933() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test934() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test935() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test936() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test937() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test938() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test939() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test940() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test941() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test942() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test943() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test944() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test945() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test946() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test947() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test948() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test949() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test950() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test951() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test952() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test953() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test954() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test955() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test956() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test957() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test958() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test959() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test960() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test961() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test962() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test963() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test964() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test965() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test966() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test967() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test968() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test969() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test970() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test971() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test972() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test973() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test974() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test975() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test976() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test977() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test978() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test979() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test980() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test981() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test982() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test983() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test984() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test985() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test986() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test987() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test988() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test989() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test990() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}
@Test
public void test991() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test992() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test993() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test994() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test995() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test996() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test997() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test998() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test999() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1000() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1001() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1002() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1003() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1004() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1005() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1006() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1007() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1008() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1009() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1010() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1011() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1012() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1013() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1014() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1015() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1016() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1017() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1018() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1019() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1020() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1021() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1022() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.areEqual(s1, s2));
}
@Test
public void test1023() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.areEqual(s1, s2));
}

@Test
public void test1024() {
  int[] a1 = {};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1025() {
  int[] a1 = {};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1026() {
  int[] a1 = {};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1027() {
  int[] a1 = {};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1028() {
  int[] a1 = {};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1029() {
  int[] a1 = {};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1030() {
  int[] a1 = {};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1031() {
  int[] a1 = {};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1032() {
  int[] a1 = {};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1033() {
  int[] a1 = {};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1034() {
  int[] a1 = {};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1035() {
  int[] a1 = {};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1036() {
  int[] a1 = {};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1037() {
  int[] a1 = {};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1038() {
  int[] a1 = {};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1039() {
  int[] a1 = {};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1040() {
  int[] a1 = {};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1041() {
  int[] a1 = {};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1042() {
  int[] a1 = {};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1043() {
  int[] a1 = {};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1044() {
  int[] a1 = {};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1045() {
  int[] a1 = {};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1046() {
  int[] a1 = {};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1047() {
  int[] a1 = {};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1048() {
  int[] a1 = {};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1049() {
  int[] a1 = {};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1050() {
  int[] a1 = {};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1051() {
  int[] a1 = {};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1052() {
  int[] a1 = {};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1053() {
  int[] a1 = {};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1054() {
  int[] a1 = {};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1055() {
  int[] a1 = {};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1056() {
  int[] a1 = {1};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1057() {
  int[] a1 = {1};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1058() {
  int[] a1 = {1};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1059() {
  int[] a1 = {1};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1060() {
  int[] a1 = {1};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1061() {
  int[] a1 = {1};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1062() {
  int[] a1 = {1};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1063() {
  int[] a1 = {1};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1064() {
  int[] a1 = {1};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1065() {
  int[] a1 = {1};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1066() {
  int[] a1 = {1};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1067() {
  int[] a1 = {1};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1068() {
  int[] a1 = {1};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1069() {
  int[] a1 = {1};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1070() {
  int[] a1 = {1};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1071() {
  int[] a1 = {1};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1072() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1073() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1074() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1075() {
  int[] a1 = {1};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1076() {
  int[] a1 = {1};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1077() {
  int[] a1 = {1};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1078() {
  int[] a1 = {1};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1079() {
  int[] a1 = {1};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1080() {
  int[] a1 = {1};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1081() {
  int[] a1 = {1};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1082() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1083() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1084() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1085() {
  int[] a1 = {1};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1086() {
  int[] a1 = {1};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1087() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1088() {
  int[] a1 = {2};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1089() {
  int[] a1 = {2};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1090() {
  int[] a1 = {2};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1091() {
  int[] a1 = {2};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1092() {
  int[] a1 = {2};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1093() {
  int[] a1 = {2};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1094() {
  int[] a1 = {2};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1095() {
  int[] a1 = {2};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1096() {
  int[] a1 = {2};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1097() {
  int[] a1 = {2};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1098() {
  int[] a1 = {2};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1099() {
  int[] a1 = {2};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1100() {
  int[] a1 = {2};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1101() {
  int[] a1 = {2};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1102() {
  int[] a1 = {2};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1103() {
  int[] a1 = {2};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1104() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1105() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1106() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1107() {
  int[] a1 = {2};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1108() {
  int[] a1 = {2};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1109() {
  int[] a1 = {2};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1110() {
  int[] a1 = {2};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1111() {
  int[] a1 = {2};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1112() {
  int[] a1 = {2};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1113() {
  int[] a1 = {2};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1114() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1115() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1116() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1117() {
  int[] a1 = {2};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1118() {
  int[] a1 = {2};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1119() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1120() {
  int[] a1 = {3};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1121() {
  int[] a1 = {3};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1122() {
  int[] a1 = {3};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1123() {
  int[] a1 = {3};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1124() {
  int[] a1 = {3};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1125() {
  int[] a1 = {3};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1126() {
  int[] a1 = {3};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1127() {
  int[] a1 = {3};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1128() {
  int[] a1 = {3};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1129() {
  int[] a1 = {3};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1130() {
  int[] a1 = {3};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1131() {
  int[] a1 = {3};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1132() {
  int[] a1 = {3};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1133() {
  int[] a1 = {3};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1134() {
  int[] a1 = {3};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1135() {
  int[] a1 = {3};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1136() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1137() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1138() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1139() {
  int[] a1 = {3};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1140() {
  int[] a1 = {3};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1141() {
  int[] a1 = {3};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1142() {
  int[] a1 = {3};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1143() {
  int[] a1 = {3};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1144() {
  int[] a1 = {3};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1145() {
  int[] a1 = {3};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1146() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1147() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1148() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1149() {
  int[] a1 = {3};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1150() {
  int[] a1 = {3};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1151() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1152() {
  int[] a1 = {4};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1153() {
  int[] a1 = {4};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1154() {
  int[] a1 = {4};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1155() {
  int[] a1 = {4};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1156() {
  int[] a1 = {4};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1157() {
  int[] a1 = {4};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1158() {
  int[] a1 = {4};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1159() {
  int[] a1 = {4};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1160() {
  int[] a1 = {4};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1161() {
  int[] a1 = {4};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1162() {
  int[] a1 = {4};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1163() {
  int[] a1 = {4};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1164() {
  int[] a1 = {4};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1165() {
  int[] a1 = {4};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1166() {
  int[] a1 = {4};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1167() {
  int[] a1 = {4};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1168() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1169() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1170() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1171() {
  int[] a1 = {4};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1172() {
  int[] a1 = {4};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1173() {
  int[] a1 = {4};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1174() {
  int[] a1 = {4};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1175() {
  int[] a1 = {4};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1176() {
  int[] a1 = {4};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1177() {
  int[] a1 = {4};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1178() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1179() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1180() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1181() {
  int[] a1 = {4};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1182() {
  int[] a1 = {4};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1183() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1184() {
  int[] a1 = {5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1185() {
  int[] a1 = {5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1186() {
  int[] a1 = {5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1187() {
  int[] a1 = {5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1188() {
  int[] a1 = {5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1189() {
  int[] a1 = {5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1190() {
  int[] a1 = {5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1191() {
  int[] a1 = {5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1192() {
  int[] a1 = {5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1193() {
  int[] a1 = {5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1194() {
  int[] a1 = {5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1195() {
  int[] a1 = {5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1196() {
  int[] a1 = {5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1197() {
  int[] a1 = {5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1198() {
  int[] a1 = {5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1199() {
  int[] a1 = {5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1200() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1201() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1202() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1203() {
  int[] a1 = {5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1204() {
  int[] a1 = {5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1205() {
  int[] a1 = {5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1206() {
  int[] a1 = {5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1207() {
  int[] a1 = {5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1208() {
  int[] a1 = {5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1209() {
  int[] a1 = {5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1210() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1211() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1212() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1213() {
  int[] a1 = {5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1214() {
  int[] a1 = {5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1215() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1216() {
  int[] a1 = {1, 2};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1217() {
  int[] a1 = {1, 2};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1218() {
  int[] a1 = {1, 2};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1219() {
  int[] a1 = {1, 2};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1220() {
  int[] a1 = {1, 2};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1221() {
  int[] a1 = {1, 2};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1222() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1223() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1224() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1225() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1226() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1227() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1228() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1229() {
  int[] a1 = {1, 2};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1230() {
  int[] a1 = {1, 2};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1231() {
  int[] a1 = {1, 2};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1232() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1233() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1234() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1235() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1236() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1237() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1238() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1239() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1240() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1241() {
  int[] a1 = {1, 2};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1242() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1243() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1244() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1245() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1246() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1247() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1248() {
  int[] a1 = {1, 3};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1249() {
  int[] a1 = {1, 3};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1250() {
  int[] a1 = {1, 3};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1251() {
  int[] a1 = {1, 3};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1252() {
  int[] a1 = {1, 3};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1253() {
  int[] a1 = {1, 3};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1254() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1255() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1256() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1257() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1258() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1259() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1260() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1261() {
  int[] a1 = {1, 3};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1262() {
  int[] a1 = {1, 3};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1263() {
  int[] a1 = {1, 3};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1264() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1265() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1266() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1267() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1268() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1269() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1270() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1271() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1272() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1273() {
  int[] a1 = {1, 3};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1274() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1275() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1276() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1277() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1278() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1279() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1280() {
  int[] a1 = {1, 4};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1281() {
  int[] a1 = {1, 4};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1282() {
  int[] a1 = {1, 4};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1283() {
  int[] a1 = {1, 4};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1284() {
  int[] a1 = {1, 4};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1285() {
  int[] a1 = {1, 4};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1286() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1287() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1288() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1289() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1290() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1291() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1292() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1293() {
  int[] a1 = {1, 4};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1294() {
  int[] a1 = {1, 4};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1295() {
  int[] a1 = {1, 4};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1296() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1297() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1298() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1299() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1300() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1301() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1302() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1303() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1304() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1305() {
  int[] a1 = {1, 4};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1306() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1307() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1308() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1309() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1310() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1311() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1312() {
  int[] a1 = {1, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1313() {
  int[] a1 = {1, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1314() {
  int[] a1 = {1, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1315() {
  int[] a1 = {1, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1316() {
  int[] a1 = {1, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1317() {
  int[] a1 = {1, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1318() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1319() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1320() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1321() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1322() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1323() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1324() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1325() {
  int[] a1 = {1, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1326() {
  int[] a1 = {1, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1327() {
  int[] a1 = {1, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1328() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1329() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1330() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1331() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1332() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1333() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1334() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1335() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1336() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1337() {
  int[] a1 = {1, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1338() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1339() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1340() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1341() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1342() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1343() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1344() {
  int[] a1 = {2, 3};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1345() {
  int[] a1 = {2, 3};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1346() {
  int[] a1 = {2, 3};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1347() {
  int[] a1 = {2, 3};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1348() {
  int[] a1 = {2, 3};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1349() {
  int[] a1 = {2, 3};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1350() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1351() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1352() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1353() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1354() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1355() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1356() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1357() {
  int[] a1 = {2, 3};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1358() {
  int[] a1 = {2, 3};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1359() {
  int[] a1 = {2, 3};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1360() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1361() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1362() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1363() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1364() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1365() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1366() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1367() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1368() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1369() {
  int[] a1 = {2, 3};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1370() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1371() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1372() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1373() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1374() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1375() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1376() {
  int[] a1 = {2, 4};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1377() {
  int[] a1 = {2, 4};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1378() {
  int[] a1 = {2, 4};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1379() {
  int[] a1 = {2, 4};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1380() {
  int[] a1 = {2, 4};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1381() {
  int[] a1 = {2, 4};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1382() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1383() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1384() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1385() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1386() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1387() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1388() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1389() {
  int[] a1 = {2, 4};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1390() {
  int[] a1 = {2, 4};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1391() {
  int[] a1 = {2, 4};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1392() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1393() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1394() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1395() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1396() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1397() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1398() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1399() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1400() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1401() {
  int[] a1 = {2, 4};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1402() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1403() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1404() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1405() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1406() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1407() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1408() {
  int[] a1 = {2, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1409() {
  int[] a1 = {2, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1410() {
  int[] a1 = {2, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1411() {
  int[] a1 = {2, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1412() {
  int[] a1 = {2, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1413() {
  int[] a1 = {2, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1414() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1415() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1416() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1417() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1418() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1419() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1420() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1421() {
  int[] a1 = {2, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1422() {
  int[] a1 = {2, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1423() {
  int[] a1 = {2, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1424() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1425() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1426() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1427() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1428() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1429() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1430() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1431() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1432() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1433() {
  int[] a1 = {2, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1434() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1435() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1436() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1437() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1438() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1439() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1440() {
  int[] a1 = {3, 4};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1441() {
  int[] a1 = {3, 4};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1442() {
  int[] a1 = {3, 4};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1443() {
  int[] a1 = {3, 4};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1444() {
  int[] a1 = {3, 4};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1445() {
  int[] a1 = {3, 4};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1446() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1447() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1448() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1449() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1450() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1451() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1452() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1453() {
  int[] a1 = {3, 4};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1454() {
  int[] a1 = {3, 4};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1455() {
  int[] a1 = {3, 4};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1456() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1457() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1458() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1459() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1460() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1461() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1462() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1463() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1464() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1465() {
  int[] a1 = {3, 4};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1466() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1467() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1468() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1469() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1470() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1471() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1472() {
  int[] a1 = {3, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1473() {
  int[] a1 = {3, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1474() {
  int[] a1 = {3, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1475() {
  int[] a1 = {3, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1476() {
  int[] a1 = {3, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1477() {
  int[] a1 = {3, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1478() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1479() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1480() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1481() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1482() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1483() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1484() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1485() {
  int[] a1 = {3, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1486() {
  int[] a1 = {3, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1487() {
  int[] a1 = {3, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1488() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1489() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1490() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1491() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1492() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1493() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1494() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1495() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1496() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1497() {
  int[] a1 = {3, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1498() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1499() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1500() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1501() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1502() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1503() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1504() {
  int[] a1 = {4, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1505() {
  int[] a1 = {4, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1506() {
  int[] a1 = {4, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1507() {
  int[] a1 = {4, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1508() {
  int[] a1 = {4, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1509() {
  int[] a1 = {4, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1510() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1511() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1512() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1513() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1514() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1515() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1516() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1517() {
  int[] a1 = {4, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1518() {
  int[] a1 = {4, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1519() {
  int[] a1 = {4, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1520() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1521() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1522() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1523() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1524() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1525() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1526() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1527() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1528() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1529() {
  int[] a1 = {4, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1530() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1531() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1532() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1533() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1534() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1535() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1536() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1537() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1538() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1539() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1540() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1541() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1542() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1543() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1544() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1545() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1546() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1547() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1548() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1549() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1550() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1551() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1552() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1553() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1554() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1555() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1556() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1557() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1558() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1559() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1560() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1561() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1562() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1563() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1564() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1565() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1566() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1567() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1568() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1569() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1570() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1571() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1572() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1573() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1574() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1575() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1576() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1577() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1578() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1579() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1580() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1581() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1582() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1583() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1584() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1585() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1586() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1587() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1588() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1589() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1590() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1591() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1592() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1593() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1594() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1595() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1596() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1597() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1598() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1599() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1600() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1601() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1602() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1603() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1604() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1605() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1606() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1607() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1608() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1609() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1610() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1611() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1612() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1613() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1614() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1615() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1616() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1617() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1618() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1619() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1620() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1621() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1622() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1623() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1624() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1625() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1626() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1627() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1628() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1629() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1630() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1631() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1632() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1633() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1634() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1635() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1636() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1637() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1638() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1639() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1640() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1641() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1642() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1643() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1644() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1645() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1646() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1647() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1648() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1649() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1650() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1651() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1652() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1653() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1654() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1655() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1656() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1657() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1658() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1659() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1660() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1661() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1662() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1663() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1664() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1665() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1666() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1667() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1668() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1669() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1670() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1671() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1672() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1673() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1674() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1675() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1676() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1677() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1678() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1679() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1680() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1681() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1682() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1683() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1684() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1685() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1686() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1687() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1688() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1689() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1690() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1691() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1692() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1693() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1694() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1695() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1696() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1697() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1698() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1699() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1700() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1701() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1702() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1703() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1704() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1705() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1706() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1707() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1708() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1709() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1710() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1711() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1712() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1713() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1714() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1715() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1716() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1717() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1718() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1719() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1720() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1721() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1722() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1723() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1724() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1725() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1726() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1727() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1728() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1729() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1730() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1731() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1732() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1733() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1734() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1735() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1736() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1737() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1738() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1739() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1740() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1741() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1742() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1743() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1744() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1745() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1746() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1747() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1748() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1749() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1750() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1751() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1752() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1753() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1754() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1755() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1756() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1757() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1758() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1759() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1760() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1761() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1762() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1763() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1764() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1765() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1766() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1767() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1768() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1769() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1770() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1771() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1772() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1773() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1774() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1775() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1776() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1777() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1778() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1779() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1780() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1781() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1782() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1783() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1784() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1785() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1786() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1787() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1788() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1789() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1790() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1791() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1792() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1793() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1794() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1795() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1796() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1797() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1798() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1799() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1800() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1801() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1802() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1803() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1804() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1805() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1806() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1807() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1808() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1809() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1810() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1811() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1812() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1813() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1814() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1815() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1816() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1817() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1818() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1819() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1820() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1821() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1822() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1823() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1824() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1825() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1826() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1827() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1828() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1829() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1830() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1831() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1832() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1833() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1834() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1835() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1836() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1837() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1838() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1839() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1840() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1841() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1842() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1843() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1844() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1845() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1846() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1847() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1848() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1849() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1850() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1851() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1852() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1853() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1854() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1855() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1856() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1857() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1858() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1859() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1860() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1861() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1862() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1863() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1864() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1865() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1866() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1867() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1868() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1869() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1870() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1871() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1872() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1873() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1874() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1875() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1876() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1877() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1878() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1879() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1880() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1881() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1882() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1883() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1884() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1885() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1886() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1887() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1888() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1889() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1890() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1891() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1892() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1893() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1894() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1895() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1896() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1897() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1898() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1899() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1900() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1901() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1902() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1903() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1904() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1905() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1906() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1907() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1908() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1909() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1910() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1911() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1912() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1913() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1914() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1915() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1916() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1917() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1918() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1919() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1920() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1921() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1922() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1923() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1924() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1925() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1926() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1927() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1928() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1929() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1930() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1931() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1932() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1933() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1934() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1935() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1936() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1937() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1938() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1939() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1940() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1941() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1942() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1943() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1944() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1945() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1946() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1947() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1948() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1949() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1950() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1951() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1952() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1953() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1954() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1955() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1956() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1957() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1958() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1959() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1960() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1961() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1962() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1963() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1964() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1965() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1966() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1967() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1968() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1969() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1970() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1971() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1972() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1973() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1974() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1975() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1976() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1977() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1978() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1979() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1980() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1981() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1982() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1983() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1984() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1985() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1986() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1987() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1988() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1989() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1990() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1991() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1992() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1993() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1994() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1995() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1996() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1997() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1998() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test1999() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2000() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2001() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2002() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2003() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2004() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2005() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2006() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2007() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2008() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2009() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2010() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2011() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2012() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2013() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2014() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2015() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2016() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2017() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2018() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2019() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2020() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2021() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2022() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2023() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2024() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2025() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2026() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2027() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2028() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2029() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2030() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2031() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2032() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2033() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2034() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2035() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2036() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2037() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2038() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2039() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2040() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2041() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2042() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2043() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2044() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2045() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2046() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertFalse(IntSet.isSubsetOf(s1, s2));
}
@Test
public void test2047() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  Assert.assertTrue(IntSet.isSubsetOf(s1, s2));
}

@Test
public void test2048() {
  int[] a1 = {};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2049() {
  int[] a1 = {};
  int[] a2 = {1};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2050() {
  int[] a1 = {};
  int[] a2 = {2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2051() {
  int[] a1 = {};
  int[] a2 = {3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2052() {
  int[] a1 = {};
  int[] a2 = {4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2053() {
  int[] a1 = {};
  int[] a2 = {5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2054() {
  int[] a1 = {};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2055() {
  int[] a1 = {};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2056() {
  int[] a1 = {};
  int[] a2 = {1, 4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2057() {
  int[] a1 = {};
  int[] a2 = {1, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2058() {
  int[] a1 = {};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2059() {
  int[] a1 = {};
  int[] a2 = {2, 4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2060() {
  int[] a1 = {};
  int[] a2 = {2, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2061() {
  int[] a1 = {};
  int[] a2 = {3, 4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2062() {
  int[] a1 = {};
  int[] a2 = {3, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2063() {
  int[] a1 = {};
  int[] a2 = {4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2064() {
  int[] a1 = {};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2065() {
  int[] a1 = {};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2066() {
  int[] a1 = {};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2067() {
  int[] a1 = {};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2068() {
  int[] a1 = {};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2069() {
  int[] a1 = {};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2070() {
  int[] a1 = {};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2071() {
  int[] a1 = {};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2072() {
  int[] a1 = {};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2073() {
  int[] a1 = {};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2074() {
  int[] a1 = {};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2075() {
  int[] a1 = {};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2076() {
  int[] a1 = {};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2077() {
  int[] a1 = {};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2078() {
  int[] a1 = {};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2079() {
  int[] a1 = {};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2080() {
  int[] a1 = {1};
  int[] a2 = {};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2081() {
  int[] a1 = {1};
  int[] a2 = {1};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2082() {
  int[] a1 = {1};
  int[] a2 = {2};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2083() {
  int[] a1 = {1};
  int[] a2 = {3};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2084() {
  int[] a1 = {1};
  int[] a2 = {4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2085() {
  int[] a1 = {1};
  int[] a2 = {5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2086() {
  int[] a1 = {1};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2087() {
  int[] a1 = {1};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2088() {
  int[] a1 = {1};
  int[] a2 = {1, 4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2089() {
  int[] a1 = {1};
  int[] a2 = {1, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2090() {
  int[] a1 = {1};
  int[] a2 = {2, 3};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2091() {
  int[] a1 = {1};
  int[] a2 = {2, 4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2092() {
  int[] a1 = {1};
  int[] a2 = {2, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2093() {
  int[] a1 = {1};
  int[] a2 = {3, 4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2094() {
  int[] a1 = {1};
  int[] a2 = {3, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2095() {
  int[] a1 = {1};
  int[] a2 = {4, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2096() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2097() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2098() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2099() {
  int[] a1 = {1};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2100() {
  int[] a1 = {1};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2101() {
  int[] a1 = {1};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2102() {
  int[] a1 = {1};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2103() {
  int[] a1 = {1};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2104() {
  int[] a1 = {1};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2105() {
  int[] a1 = {1};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2106() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2107() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2108() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2109() {
  int[] a1 = {1};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2110() {
  int[] a1 = {1};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2111() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2112() {
  int[] a1 = {2};
  int[] a2 = {};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2113() {
  int[] a1 = {2};
  int[] a2 = {1};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2114() {
  int[] a1 = {2};
  int[] a2 = {2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2115() {
  int[] a1 = {2};
  int[] a2 = {3};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2116() {
  int[] a1 = {2};
  int[] a2 = {4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2117() {
  int[] a1 = {2};
  int[] a2 = {5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2118() {
  int[] a1 = {2};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2119() {
  int[] a1 = {2};
  int[] a2 = {1, 3};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2120() {
  int[] a1 = {2};
  int[] a2 = {1, 4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2121() {
  int[] a1 = {2};
  int[] a2 = {1, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2122() {
  int[] a1 = {2};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2123() {
  int[] a1 = {2};
  int[] a2 = {2, 4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2124() {
  int[] a1 = {2};
  int[] a2 = {2, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2125() {
  int[] a1 = {2};
  int[] a2 = {3, 4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2126() {
  int[] a1 = {2};
  int[] a2 = {3, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2127() {
  int[] a1 = {2};
  int[] a2 = {4, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2128() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2129() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2130() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2131() {
  int[] a1 = {2};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2132() {
  int[] a1 = {2};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2133() {
  int[] a1 = {2};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2134() {
  int[] a1 = {2};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2135() {
  int[] a1 = {2};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2136() {
  int[] a1 = {2};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2137() {
  int[] a1 = {2};
  int[] a2 = {3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2138() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2139() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2140() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2141() {
  int[] a1 = {2};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2142() {
  int[] a1 = {2};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2143() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2144() {
  int[] a1 = {3};
  int[] a2 = {};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2145() {
  int[] a1 = {3};
  int[] a2 = {1};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2146() {
  int[] a1 = {3};
  int[] a2 = {2};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2147() {
  int[] a1 = {3};
  int[] a2 = {3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2148() {
  int[] a1 = {3};
  int[] a2 = {4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2149() {
  int[] a1 = {3};
  int[] a2 = {5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2150() {
  int[] a1 = {3};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2151() {
  int[] a1 = {3};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2152() {
  int[] a1 = {3};
  int[] a2 = {1, 4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2153() {
  int[] a1 = {3};
  int[] a2 = {1, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2154() {
  int[] a1 = {3};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2155() {
  int[] a1 = {3};
  int[] a2 = {2, 4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2156() {
  int[] a1 = {3};
  int[] a2 = {2, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2157() {
  int[] a1 = {3};
  int[] a2 = {3, 4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2158() {
  int[] a1 = {3};
  int[] a2 = {3, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2159() {
  int[] a1 = {3};
  int[] a2 = {4, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2160() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2161() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2162() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2163() {
  int[] a1 = {3};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2164() {
  int[] a1 = {3};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2165() {
  int[] a1 = {3};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2166() {
  int[] a1 = {3};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2167() {
  int[] a1 = {3};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2168() {
  int[] a1 = {3};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2169() {
  int[] a1 = {3};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2170() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2171() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2172() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2173() {
  int[] a1 = {3};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2174() {
  int[] a1 = {3};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2175() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2176() {
  int[] a1 = {4};
  int[] a2 = {};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2177() {
  int[] a1 = {4};
  int[] a2 = {1};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2178() {
  int[] a1 = {4};
  int[] a2 = {2};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2179() {
  int[] a1 = {4};
  int[] a2 = {3};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2180() {
  int[] a1 = {4};
  int[] a2 = {4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2181() {
  int[] a1 = {4};
  int[] a2 = {5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2182() {
  int[] a1 = {4};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2183() {
  int[] a1 = {4};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2184() {
  int[] a1 = {4};
  int[] a2 = {1, 4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2185() {
  int[] a1 = {4};
  int[] a2 = {1, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2186() {
  int[] a1 = {4};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2187() {
  int[] a1 = {4};
  int[] a2 = {2, 4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2188() {
  int[] a1 = {4};
  int[] a2 = {2, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2189() {
  int[] a1 = {4};
  int[] a2 = {3, 4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2190() {
  int[] a1 = {4};
  int[] a2 = {3, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2191() {
  int[] a1 = {4};
  int[] a2 = {4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2192() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2193() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2194() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2195() {
  int[] a1 = {4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2196() {
  int[] a1 = {4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2197() {
  int[] a1 = {4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2198() {
  int[] a1 = {4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2199() {
  int[] a1 = {4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2200() {
  int[] a1 = {4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2201() {
  int[] a1 = {4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2202() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2203() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2204() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2205() {
  int[] a1 = {4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2206() {
  int[] a1 = {4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2207() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2208() {
  int[] a1 = {5};
  int[] a2 = {};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2209() {
  int[] a1 = {5};
  int[] a2 = {1};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2210() {
  int[] a1 = {5};
  int[] a2 = {2};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2211() {
  int[] a1 = {5};
  int[] a2 = {3};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2212() {
  int[] a1 = {5};
  int[] a2 = {4};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2213() {
  int[] a1 = {5};
  int[] a2 = {5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2214() {
  int[] a1 = {5};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2215() {
  int[] a1 = {5};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2216() {
  int[] a1 = {5};
  int[] a2 = {1, 4};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2217() {
  int[] a1 = {5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2218() {
  int[] a1 = {5};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2219() {
  int[] a1 = {5};
  int[] a2 = {2, 4};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2220() {
  int[] a1 = {5};
  int[] a2 = {2, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2221() {
  int[] a1 = {5};
  int[] a2 = {3, 4};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2222() {
  int[] a1 = {5};
  int[] a2 = {3, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2223() {
  int[] a1 = {5};
  int[] a2 = {4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2224() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2225() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2226() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2227() {
  int[] a1 = {5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2228() {
  int[] a1 = {5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2229() {
  int[] a1 = {5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2230() {
  int[] a1 = {5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2231() {
  int[] a1 = {5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2232() {
  int[] a1 = {5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2233() {
  int[] a1 = {5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2234() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2235() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2236() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2237() {
  int[] a1 = {5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2238() {
  int[] a1 = {5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2239() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2240() {
  int[] a1 = {1, 2};
  int[] a2 = {};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2241() {
  int[] a1 = {1, 2};
  int[] a2 = {1};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2242() {
  int[] a1 = {1, 2};
  int[] a2 = {2};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2243() {
  int[] a1 = {1, 2};
  int[] a2 = {3};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2244() {
  int[] a1 = {1, 2};
  int[] a2 = {4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2245() {
  int[] a1 = {1, 2};
  int[] a2 = {5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2246() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2247() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 3};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2248() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2249() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2250() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 3};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2251() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2252() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2253() {
  int[] a1 = {1, 2};
  int[] a2 = {3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2254() {
  int[] a1 = {1, 2};
  int[] a2 = {3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2255() {
  int[] a1 = {1, 2};
  int[] a2 = {4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2256() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2257() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2258() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2259() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2260() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2261() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2262() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2263() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2264() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2265() {
  int[] a1 = {1, 2};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2266() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2267() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2268() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2269() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2270() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2271() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2272() {
  int[] a1 = {1, 3};
  int[] a2 = {};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2273() {
  int[] a1 = {1, 3};
  int[] a2 = {1};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2274() {
  int[] a1 = {1, 3};
  int[] a2 = {2};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2275() {
  int[] a1 = {1, 3};
  int[] a2 = {3};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2276() {
  int[] a1 = {1, 3};
  int[] a2 = {4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2277() {
  int[] a1 = {1, 3};
  int[] a2 = {5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2278() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2279() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2280() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2281() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2282() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 3};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2283() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2284() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2285() {
  int[] a1 = {1, 3};
  int[] a2 = {3, 4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2286() {
  int[] a1 = {1, 3};
  int[] a2 = {3, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2287() {
  int[] a1 = {1, 3};
  int[] a2 = {4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2288() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2289() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2290() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2291() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2292() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2293() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2294() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2295() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2296() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2297() {
  int[] a1 = {1, 3};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2298() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2299() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2300() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2301() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2302() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2303() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2304() {
  int[] a1 = {1, 4};
  int[] a2 = {};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2305() {
  int[] a1 = {1, 4};
  int[] a2 = {1};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2306() {
  int[] a1 = {1, 4};
  int[] a2 = {2};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2307() {
  int[] a1 = {1, 4};
  int[] a2 = {3};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2308() {
  int[] a1 = {1, 4};
  int[] a2 = {4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2309() {
  int[] a1 = {1, 4};
  int[] a2 = {5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2310() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2311() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2312() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2313() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2314() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 3};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2315() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2316() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2317() {
  int[] a1 = {1, 4};
  int[] a2 = {3, 4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2318() {
  int[] a1 = {1, 4};
  int[] a2 = {3, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2319() {
  int[] a1 = {1, 4};
  int[] a2 = {4, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2320() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2321() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2322() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2323() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2324() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2325() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2326() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2327() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2328() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2329() {
  int[] a1 = {1, 4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2330() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2331() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2332() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2333() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2334() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2335() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2336() {
  int[] a1 = {1, 5};
  int[] a2 = {};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2337() {
  int[] a1 = {1, 5};
  int[] a2 = {1};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2338() {
  int[] a1 = {1, 5};
  int[] a2 = {2};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2339() {
  int[] a1 = {1, 5};
  int[] a2 = {3};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2340() {
  int[] a1 = {1, 5};
  int[] a2 = {4};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2341() {
  int[] a1 = {1, 5};
  int[] a2 = {5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2342() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2343() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2344() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2345() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2346() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 3};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2347() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 4};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2348() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2349() {
  int[] a1 = {1, 5};
  int[] a2 = {3, 4};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2350() {
  int[] a1 = {1, 5};
  int[] a2 = {3, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2351() {
  int[] a1 = {1, 5};
  int[] a2 = {4, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2352() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2353() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2354() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2355() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2356() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2357() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2358() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2359() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2360() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2361() {
  int[] a1 = {1, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2362() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2363() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2364() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2365() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2366() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2367() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2368() {
  int[] a1 = {2, 3};
  int[] a2 = {};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2369() {
  int[] a1 = {2, 3};
  int[] a2 = {1};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2370() {
  int[] a1 = {2, 3};
  int[] a2 = {2};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2371() {
  int[] a1 = {2, 3};
  int[] a2 = {3};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2372() {
  int[] a1 = {2, 3};
  int[] a2 = {4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2373() {
  int[] a1 = {2, 3};
  int[] a2 = {5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2374() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2375() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 3};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2376() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2377() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2378() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2379() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2380() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2381() {
  int[] a1 = {2, 3};
  int[] a2 = {3, 4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2382() {
  int[] a1 = {2, 3};
  int[] a2 = {3, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2383() {
  int[] a1 = {2, 3};
  int[] a2 = {4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2384() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2385() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2386() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2387() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2388() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2389() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2390() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2391() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2392() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2393() {
  int[] a1 = {2, 3};
  int[] a2 = {3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2394() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2395() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2396() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2397() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2398() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2399() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2400() {
  int[] a1 = {2, 4};
  int[] a2 = {};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2401() {
  int[] a1 = {2, 4};
  int[] a2 = {1};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2402() {
  int[] a1 = {2, 4};
  int[] a2 = {2};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2403() {
  int[] a1 = {2, 4};
  int[] a2 = {3};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2404() {
  int[] a1 = {2, 4};
  int[] a2 = {4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2405() {
  int[] a1 = {2, 4};
  int[] a2 = {5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2406() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2407() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 3};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2408() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2409() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2410() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2411() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2412() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2413() {
  int[] a1 = {2, 4};
  int[] a2 = {3, 4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2414() {
  int[] a1 = {2, 4};
  int[] a2 = {3, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2415() {
  int[] a1 = {2, 4};
  int[] a2 = {4, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2416() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2417() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2418() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2419() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2420() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2421() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2422() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2423() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2424() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2425() {
  int[] a1 = {2, 4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2426() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2427() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2428() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2429() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2430() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2431() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2432() {
  int[] a1 = {2, 5};
  int[] a2 = {};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2433() {
  int[] a1 = {2, 5};
  int[] a2 = {1};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2434() {
  int[] a1 = {2, 5};
  int[] a2 = {2};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2435() {
  int[] a1 = {2, 5};
  int[] a2 = {3};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2436() {
  int[] a1 = {2, 5};
  int[] a2 = {4};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2437() {
  int[] a1 = {2, 5};
  int[] a2 = {5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2438() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2439() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2440() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2441() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2442() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2443() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 4};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2444() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2445() {
  int[] a1 = {2, 5};
  int[] a2 = {3, 4};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2446() {
  int[] a1 = {2, 5};
  int[] a2 = {3, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2447() {
  int[] a1 = {2, 5};
  int[] a2 = {4, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2448() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2449() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2450() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2451() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2452() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2453() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2454() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2455() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2456() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2457() {
  int[] a1 = {2, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2458() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2459() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2460() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2461() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2462() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2463() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2464() {
  int[] a1 = {3, 4};
  int[] a2 = {};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2465() {
  int[] a1 = {3, 4};
  int[] a2 = {1};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2466() {
  int[] a1 = {3, 4};
  int[] a2 = {2};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2467() {
  int[] a1 = {3, 4};
  int[] a2 = {3};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2468() {
  int[] a1 = {3, 4};
  int[] a2 = {4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2469() {
  int[] a1 = {3, 4};
  int[] a2 = {5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2470() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2471() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2472() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2473() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2474() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2475() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2476() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2477() {
  int[] a1 = {3, 4};
  int[] a2 = {3, 4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2478() {
  int[] a1 = {3, 4};
  int[] a2 = {3, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2479() {
  int[] a1 = {3, 4};
  int[] a2 = {4, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2480() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2481() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2482() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2483() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2484() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2485() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2486() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2487() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2488() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2489() {
  int[] a1 = {3, 4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2490() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2491() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2492() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2493() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2494() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2495() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2496() {
  int[] a1 = {3, 5};
  int[] a2 = {};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2497() {
  int[] a1 = {3, 5};
  int[] a2 = {1};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2498() {
  int[] a1 = {3, 5};
  int[] a2 = {2};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2499() {
  int[] a1 = {3, 5};
  int[] a2 = {3};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2500() {
  int[] a1 = {3, 5};
  int[] a2 = {4};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2501() {
  int[] a1 = {3, 5};
  int[] a2 = {5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2502() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2503() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2504() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2505() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2506() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2507() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 4};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2508() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2509() {
  int[] a1 = {3, 5};
  int[] a2 = {3, 4};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2510() {
  int[] a1 = {3, 5};
  int[] a2 = {3, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2511() {
  int[] a1 = {3, 5};
  int[] a2 = {4, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2512() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2513() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2514() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2515() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2516() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2517() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2518() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2519() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2520() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2521() {
  int[] a1 = {3, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2522() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2523() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2524() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2525() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2526() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2527() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2528() {
  int[] a1 = {4, 5};
  int[] a2 = {};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2529() {
  int[] a1 = {4, 5};
  int[] a2 = {1};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2530() {
  int[] a1 = {4, 5};
  int[] a2 = {2};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2531() {
  int[] a1 = {4, 5};
  int[] a2 = {3};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2532() {
  int[] a1 = {4, 5};
  int[] a2 = {4};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2533() {
  int[] a1 = {4, 5};
  int[] a2 = {5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2534() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2535() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2536() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2537() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2538() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2539() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2540() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2541() {
  int[] a1 = {4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2542() {
  int[] a1 = {4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2543() {
  int[] a1 = {4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2544() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2545() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2546() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2547() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2548() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2549() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2550() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2551() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2552() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2553() {
  int[] a1 = {4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2554() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2555() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2556() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2557() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2558() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2559() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2560() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2561() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2562() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2563() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {3};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2564() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2565() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2566() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2567() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 3};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2568() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2569() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2570() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 3};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2571() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2572() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2573() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2574() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2575() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2576() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2577() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2578() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2579() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2580() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2581() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2582() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2583() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2584() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2585() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2586() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2587() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2588() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2589() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2590() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2591() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2592() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2593() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2594() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2595() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {3};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2596() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2597() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2598() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2599() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 3};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2600() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2601() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2602() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 3};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2603() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2604() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2605() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2606() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2607() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2608() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2609() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2610() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2611() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2612() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2613() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2614() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2615() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2616() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2617() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2618() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2619() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2620() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2621() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2622() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2623() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2624() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2625() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2626() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2627() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {3};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2628() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {4};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2629() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2630() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2631() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2632() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2633() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2634() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 3};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2635() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 4};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2636() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2637() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2638() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2639() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2640() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2641() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2642() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2643() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2644() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2645() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2646() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2647() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2648() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2649() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2650() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2651() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2652() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2653() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2654() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2655() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2656() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2657() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2658() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2659() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {3};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2660() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2661() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2662() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2663() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2664() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2665() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2666() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 3};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2667() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2668() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2669() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {3, 4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2670() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {3, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2671() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2672() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2673() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2674() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2675() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2676() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2677() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2678() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2679() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2680() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2681() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2682() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2683() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2684() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2685() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2686() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2687() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2688() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2689() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2690() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2691() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {3};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2692() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {4};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2693() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2694() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2695() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2696() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2697() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2698() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 3};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2699() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2700() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2701() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {3, 4};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2702() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {3, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2703() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2704() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2705() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2706() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2707() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2708() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2709() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2710() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2711() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2712() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2713() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2714() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2715() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2716() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2717() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2718() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2719() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2720() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2721() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2722() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2723() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {3};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2724() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {4};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2725() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2726() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2727() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2728() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2729() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2730() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2731() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2732() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2733() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2734() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2735() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2736() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2737() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2738() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2739() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2740() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2741() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2742() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2743() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2744() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2745() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2746() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2747() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2748() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2749() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2750() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2751() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2752() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2753() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2754() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2755() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {3};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2756() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2757() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2758() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2759() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 3};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2760() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2761() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2762() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2763() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2764() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2765() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {3, 4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2766() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {3, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2767() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2768() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2769() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2770() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2771() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2772() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2773() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2774() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2775() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2776() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2777() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2778() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2779() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2780() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2781() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2782() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2783() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2784() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2785() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2786() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2787() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {3};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2788() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {4};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2789() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2790() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2791() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2792() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2793() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2794() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2795() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 4};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2796() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2797() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {3, 4};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2798() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {3, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2799() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2800() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2801() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2802() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2803() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2804() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2805() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2806() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2807() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2808() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2809() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2810() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2811() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2812() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2813() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2814() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2815() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2816() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2817() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2818() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2819() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {3};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2820() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {4};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2821() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2822() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2823() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2824() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2825() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2826() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2827() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2828() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2829() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2830() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2831() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2832() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2833() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2834() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2835() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2836() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2837() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2838() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2839() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2840() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2841() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2842() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2843() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2844() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2845() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2846() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2847() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2848() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2849() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2850() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2851() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {3};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2852() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {4};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2853() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2854() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2855() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2856() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2857() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2858() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2859() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2860() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2861() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2862() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2863() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2864() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2865() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2866() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2867() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2868() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2869() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2870() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2871() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2872() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2873() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2874() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2875() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2876() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2877() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2878() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2879() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2880() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2881() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2882() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2883() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {3};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2884() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2885() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2886() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2887() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 3};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2888() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2889() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2890() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 3};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2891() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2892() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2893() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2894() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2895() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2896() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2897() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2898() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2899() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2900() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2901() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2902() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2903() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2904() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2905() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2906() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2907() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2908() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2909() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2910() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2911() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2912() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2913() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2914() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2915() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {3};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2916() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2917() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2918() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2919() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2920() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2921() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2922() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 3};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2923() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2924() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2925() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2926() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2927() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2928() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2929() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2930() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2931() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2932() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2933() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2934() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2935() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2936() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2937() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2938() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2939() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2940() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2941() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2942() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2943() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2944() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2945() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2946() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2947() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {3};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2948() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {4};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2949() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2950() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2951() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2952() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2953() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2954() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2955() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2956() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2957() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2958() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2959() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2960() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2961() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2962() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2963() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2964() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2965() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2966() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2967() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2968() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2969() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2970() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2971() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2972() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2973() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2974() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2975() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2976() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2977() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2978() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2979() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {3};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2980() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {4};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2981() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2982() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2983() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2984() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2985() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2986() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2987() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2988() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2989() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2990() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2991() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2992() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2993() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2994() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2995() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2996() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2997() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2998() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test2999() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3000() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3001() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3002() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3003() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3004() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3005() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3006() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3007() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3008() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3009() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3010() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3011() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {3};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3012() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {4};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3013() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3014() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3015() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3016() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3017() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3018() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3019() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3020() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3021() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3022() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3023() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3024() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3025() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3026() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3027() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3028() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3029() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3030() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3031() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3032() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3033() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3034() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3035() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3036() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3037() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3038() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3039() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3040() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3041() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3042() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3043() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {3};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3044() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3045() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3046() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3047() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3048() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3049() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3050() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3051() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3052() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3053() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3054() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3055() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3056() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3057() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3058() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3059() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3060() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3061() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3062() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3063() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3064() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3065() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3066() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3067() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3068() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3069() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3070() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}
@Test
public void test3071() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.union(s1, s2), s3));
}

@Test
public void test3072() {
  int[] a1 = {};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3073() {
  int[] a1 = {};
  int[] a2 = {1};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3074() {
  int[] a1 = {};
  int[] a2 = {2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3075() {
  int[] a1 = {};
  int[] a2 = {3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3076() {
  int[] a1 = {};
  int[] a2 = {4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3077() {
  int[] a1 = {};
  int[] a2 = {5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3078() {
  int[] a1 = {};
  int[] a2 = {1, 2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3079() {
  int[] a1 = {};
  int[] a2 = {1, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3080() {
  int[] a1 = {};
  int[] a2 = {1, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3081() {
  int[] a1 = {};
  int[] a2 = {1, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3082() {
  int[] a1 = {};
  int[] a2 = {2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3083() {
  int[] a1 = {};
  int[] a2 = {2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3084() {
  int[] a1 = {};
  int[] a2 = {2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3085() {
  int[] a1 = {};
  int[] a2 = {3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3086() {
  int[] a1 = {};
  int[] a2 = {3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3087() {
  int[] a1 = {};
  int[] a2 = {4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3088() {
  int[] a1 = {};
  int[] a2 = {1, 2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3089() {
  int[] a1 = {};
  int[] a2 = {1, 2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3090() {
  int[] a1 = {};
  int[] a2 = {1, 2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3091() {
  int[] a1 = {};
  int[] a2 = {1, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3092() {
  int[] a1 = {};
  int[] a2 = {1, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3093() {
  int[] a1 = {};
  int[] a2 = {1, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3094() {
  int[] a1 = {};
  int[] a2 = {2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3095() {
  int[] a1 = {};
  int[] a2 = {2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3096() {
  int[] a1 = {};
  int[] a2 = {2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3097() {
  int[] a1 = {};
  int[] a2 = {3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3098() {
  int[] a1 = {};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3099() {
  int[] a1 = {};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3100() {
  int[] a1 = {};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3101() {
  int[] a1 = {};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3102() {
  int[] a1 = {};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3103() {
  int[] a1 = {};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3104() {
  int[] a1 = {1};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3105() {
  int[] a1 = {1};
  int[] a2 = {1};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3106() {
  int[] a1 = {1};
  int[] a2 = {2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3107() {
  int[] a1 = {1};
  int[] a2 = {3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3108() {
  int[] a1 = {1};
  int[] a2 = {4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3109() {
  int[] a1 = {1};
  int[] a2 = {5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3110() {
  int[] a1 = {1};
  int[] a2 = {1, 2};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3111() {
  int[] a1 = {1};
  int[] a2 = {1, 3};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3112() {
  int[] a1 = {1};
  int[] a2 = {1, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3113() {
  int[] a1 = {1};
  int[] a2 = {1, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3114() {
  int[] a1 = {1};
  int[] a2 = {2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3115() {
  int[] a1 = {1};
  int[] a2 = {2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3116() {
  int[] a1 = {1};
  int[] a2 = {2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3117() {
  int[] a1 = {1};
  int[] a2 = {3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3118() {
  int[] a1 = {1};
  int[] a2 = {3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3119() {
  int[] a1 = {1};
  int[] a2 = {4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3120() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3121() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3122() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3123() {
  int[] a1 = {1};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3124() {
  int[] a1 = {1};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3125() {
  int[] a1 = {1};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3126() {
  int[] a1 = {1};
  int[] a2 = {2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3127() {
  int[] a1 = {1};
  int[] a2 = {2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3128() {
  int[] a1 = {1};
  int[] a2 = {2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3129() {
  int[] a1 = {1};
  int[] a2 = {3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3130() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3131() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3132() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3133() {
  int[] a1 = {1};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3134() {
  int[] a1 = {1};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3135() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3136() {
  int[] a1 = {2};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3137() {
  int[] a1 = {2};
  int[] a2 = {1};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3138() {
  int[] a1 = {2};
  int[] a2 = {2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3139() {
  int[] a1 = {2};
  int[] a2 = {3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3140() {
  int[] a1 = {2};
  int[] a2 = {4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3141() {
  int[] a1 = {2};
  int[] a2 = {5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3142() {
  int[] a1 = {2};
  int[] a2 = {1, 2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3143() {
  int[] a1 = {2};
  int[] a2 = {1, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3144() {
  int[] a1 = {2};
  int[] a2 = {1, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3145() {
  int[] a1 = {2};
  int[] a2 = {1, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3146() {
  int[] a1 = {2};
  int[] a2 = {2, 3};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3147() {
  int[] a1 = {2};
  int[] a2 = {2, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3148() {
  int[] a1 = {2};
  int[] a2 = {2, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3149() {
  int[] a1 = {2};
  int[] a2 = {3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3150() {
  int[] a1 = {2};
  int[] a2 = {3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3151() {
  int[] a1 = {2};
  int[] a2 = {4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3152() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 3};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3153() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3154() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3155() {
  int[] a1 = {2};
  int[] a2 = {1, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3156() {
  int[] a1 = {2};
  int[] a2 = {1, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3157() {
  int[] a1 = {2};
  int[] a2 = {1, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3158() {
  int[] a1 = {2};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3159() {
  int[] a1 = {2};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3160() {
  int[] a1 = {2};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3161() {
  int[] a1 = {2};
  int[] a2 = {3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3162() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3163() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3164() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3165() {
  int[] a1 = {2};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3166() {
  int[] a1 = {2};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3167() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3168() {
  int[] a1 = {3};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3169() {
  int[] a1 = {3};
  int[] a2 = {1};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3170() {
  int[] a1 = {3};
  int[] a2 = {2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3171() {
  int[] a1 = {3};
  int[] a2 = {3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3172() {
  int[] a1 = {3};
  int[] a2 = {4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3173() {
  int[] a1 = {3};
  int[] a2 = {5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3174() {
  int[] a1 = {3};
  int[] a2 = {1, 2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3175() {
  int[] a1 = {3};
  int[] a2 = {1, 3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3176() {
  int[] a1 = {3};
  int[] a2 = {1, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3177() {
  int[] a1 = {3};
  int[] a2 = {1, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3178() {
  int[] a1 = {3};
  int[] a2 = {2, 3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3179() {
  int[] a1 = {3};
  int[] a2 = {2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3180() {
  int[] a1 = {3};
  int[] a2 = {2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3181() {
  int[] a1 = {3};
  int[] a2 = {3, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3182() {
  int[] a1 = {3};
  int[] a2 = {3, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3183() {
  int[] a1 = {3};
  int[] a2 = {4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3184() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3185() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3186() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3187() {
  int[] a1 = {3};
  int[] a2 = {1, 3, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3188() {
  int[] a1 = {3};
  int[] a2 = {1, 3, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3189() {
  int[] a1 = {3};
  int[] a2 = {1, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3190() {
  int[] a1 = {3};
  int[] a2 = {2, 3, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3191() {
  int[] a1 = {3};
  int[] a2 = {2, 3, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3192() {
  int[] a1 = {3};
  int[] a2 = {2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3193() {
  int[] a1 = {3};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3194() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3195() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3196() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3197() {
  int[] a1 = {3};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3198() {
  int[] a1 = {3};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3199() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3200() {
  int[] a1 = {4};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3201() {
  int[] a1 = {4};
  int[] a2 = {1};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3202() {
  int[] a1 = {4};
  int[] a2 = {2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3203() {
  int[] a1 = {4};
  int[] a2 = {3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3204() {
  int[] a1 = {4};
  int[] a2 = {4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3205() {
  int[] a1 = {4};
  int[] a2 = {5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3206() {
  int[] a1 = {4};
  int[] a2 = {1, 2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3207() {
  int[] a1 = {4};
  int[] a2 = {1, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3208() {
  int[] a1 = {4};
  int[] a2 = {1, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3209() {
  int[] a1 = {4};
  int[] a2 = {1, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3210() {
  int[] a1 = {4};
  int[] a2 = {2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3211() {
  int[] a1 = {4};
  int[] a2 = {2, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3212() {
  int[] a1 = {4};
  int[] a2 = {2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3213() {
  int[] a1 = {4};
  int[] a2 = {3, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3214() {
  int[] a1 = {4};
  int[] a2 = {3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3215() {
  int[] a1 = {4};
  int[] a2 = {4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3216() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3217() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3218() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3219() {
  int[] a1 = {4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3220() {
  int[] a1 = {4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3221() {
  int[] a1 = {4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3222() {
  int[] a1 = {4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3223() {
  int[] a1 = {4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3224() {
  int[] a1 = {4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3225() {
  int[] a1 = {4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3226() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3227() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3228() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3229() {
  int[] a1 = {4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3230() {
  int[] a1 = {4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3231() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3232() {
  int[] a1 = {5};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3233() {
  int[] a1 = {5};
  int[] a2 = {1};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3234() {
  int[] a1 = {5};
  int[] a2 = {2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3235() {
  int[] a1 = {5};
  int[] a2 = {3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3236() {
  int[] a1 = {5};
  int[] a2 = {4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3237() {
  int[] a1 = {5};
  int[] a2 = {5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3238() {
  int[] a1 = {5};
  int[] a2 = {1, 2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3239() {
  int[] a1 = {5};
  int[] a2 = {1, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3240() {
  int[] a1 = {5};
  int[] a2 = {1, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3241() {
  int[] a1 = {5};
  int[] a2 = {1, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3242() {
  int[] a1 = {5};
  int[] a2 = {2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3243() {
  int[] a1 = {5};
  int[] a2 = {2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3244() {
  int[] a1 = {5};
  int[] a2 = {2, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3245() {
  int[] a1 = {5};
  int[] a2 = {3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3246() {
  int[] a1 = {5};
  int[] a2 = {3, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3247() {
  int[] a1 = {5};
  int[] a2 = {4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3248() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3249() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3250() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3251() {
  int[] a1 = {5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3252() {
  int[] a1 = {5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3253() {
  int[] a1 = {5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3254() {
  int[] a1 = {5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3255() {
  int[] a1 = {5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3256() {
  int[] a1 = {5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3257() {
  int[] a1 = {5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3258() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3259() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3260() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3261() {
  int[] a1 = {5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3262() {
  int[] a1 = {5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3263() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3264() {
  int[] a1 = {1, 2};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3265() {
  int[] a1 = {1, 2};
  int[] a2 = {1};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3266() {
  int[] a1 = {1, 2};
  int[] a2 = {2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3267() {
  int[] a1 = {1, 2};
  int[] a2 = {3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3268() {
  int[] a1 = {1, 2};
  int[] a2 = {4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3269() {
  int[] a1 = {1, 2};
  int[] a2 = {5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3270() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3271() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 3};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3272() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3273() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3274() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 3};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3275() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3276() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3277() {
  int[] a1 = {1, 2};
  int[] a2 = {3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3278() {
  int[] a1 = {1, 2};
  int[] a2 = {3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3279() {
  int[] a1 = {1, 2};
  int[] a2 = {4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3280() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3281() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3282() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3283() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3284() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3285() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3286() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3287() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3288() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3289() {
  int[] a1 = {1, 2};
  int[] a2 = {3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3290() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3291() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3292() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3293() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3294() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3295() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3296() {
  int[] a1 = {1, 3};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3297() {
  int[] a1 = {1, 3};
  int[] a2 = {1};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3298() {
  int[] a1 = {1, 3};
  int[] a2 = {2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3299() {
  int[] a1 = {1, 3};
  int[] a2 = {3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3300() {
  int[] a1 = {1, 3};
  int[] a2 = {4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3301() {
  int[] a1 = {1, 3};
  int[] a2 = {5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3302() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3303() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3304() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3305() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3306() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3307() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3308() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3309() {
  int[] a1 = {1, 3};
  int[] a2 = {3, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3310() {
  int[] a1 = {1, 3};
  int[] a2 = {3, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3311() {
  int[] a1 = {1, 3};
  int[] a2 = {4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3312() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3313() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3314() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3315() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3316() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3317() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3318() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 3, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3319() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 3, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3320() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3321() {
  int[] a1 = {1, 3};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3322() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3323() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3324() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3325() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3326() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3327() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3328() {
  int[] a1 = {1, 4};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3329() {
  int[] a1 = {1, 4};
  int[] a2 = {1};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3330() {
  int[] a1 = {1, 4};
  int[] a2 = {2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3331() {
  int[] a1 = {1, 4};
  int[] a2 = {3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3332() {
  int[] a1 = {1, 4};
  int[] a2 = {4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3333() {
  int[] a1 = {1, 4};
  int[] a2 = {5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3334() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3335() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 3};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3336() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3337() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3338() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3339() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3340() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3341() {
  int[] a1 = {1, 4};
  int[] a2 = {3, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3342() {
  int[] a1 = {1, 4};
  int[] a2 = {3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3343() {
  int[] a1 = {1, 4};
  int[] a2 = {4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3344() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3345() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3346() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3347() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3348() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3349() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3350() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3351() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3352() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3353() {
  int[] a1 = {1, 4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3354() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3355() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3356() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3357() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3358() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3359() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3360() {
  int[] a1 = {1, 5};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3361() {
  int[] a1 = {1, 5};
  int[] a2 = {1};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3362() {
  int[] a1 = {1, 5};
  int[] a2 = {2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3363() {
  int[] a1 = {1, 5};
  int[] a2 = {3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3364() {
  int[] a1 = {1, 5};
  int[] a2 = {4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3365() {
  int[] a1 = {1, 5};
  int[] a2 = {5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3366() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3367() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3368() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3369() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3370() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3371() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3372() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3373() {
  int[] a1 = {1, 5};
  int[] a2 = {3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3374() {
  int[] a1 = {1, 5};
  int[] a2 = {3, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3375() {
  int[] a1 = {1, 5};
  int[] a2 = {4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3376() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3377() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3378() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3379() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3380() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3381() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3382() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3383() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3384() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3385() {
  int[] a1 = {1, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3386() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3387() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3388() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3389() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3390() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3391() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3392() {
  int[] a1 = {2, 3};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3393() {
  int[] a1 = {2, 3};
  int[] a2 = {1};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3394() {
  int[] a1 = {2, 3};
  int[] a2 = {2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3395() {
  int[] a1 = {2, 3};
  int[] a2 = {3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3396() {
  int[] a1 = {2, 3};
  int[] a2 = {4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3397() {
  int[] a1 = {2, 3};
  int[] a2 = {5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3398() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3399() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3400() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3401() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3402() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3403() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3404() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3405() {
  int[] a1 = {2, 3};
  int[] a2 = {3, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3406() {
  int[] a1 = {2, 3};
  int[] a2 = {3, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3407() {
  int[] a1 = {2, 3};
  int[] a2 = {4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3408() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 3};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3409() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3410() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3411() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 3, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3412() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 3, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3413() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3414() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3415() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3416() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3417() {
  int[] a1 = {2, 3};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3418() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3419() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3420() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3421() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3422() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3423() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3424() {
  int[] a1 = {2, 4};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3425() {
  int[] a1 = {2, 4};
  int[] a2 = {1};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3426() {
  int[] a1 = {2, 4};
  int[] a2 = {2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3427() {
  int[] a1 = {2, 4};
  int[] a2 = {3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3428() {
  int[] a1 = {2, 4};
  int[] a2 = {4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3429() {
  int[] a1 = {2, 4};
  int[] a2 = {5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3430() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3431() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3432() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3433() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3434() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 3};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3435() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3436() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3437() {
  int[] a1 = {2, 4};
  int[] a2 = {3, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3438() {
  int[] a1 = {2, 4};
  int[] a2 = {3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3439() {
  int[] a1 = {2, 4};
  int[] a2 = {4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3440() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3441() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3442() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3443() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3444() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3445() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3446() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3447() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3448() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3449() {
  int[] a1 = {2, 4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3450() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3451() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3452() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3453() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3454() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3455() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3456() {
  int[] a1 = {2, 5};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3457() {
  int[] a1 = {2, 5};
  int[] a2 = {1};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3458() {
  int[] a1 = {2, 5};
  int[] a2 = {2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3459() {
  int[] a1 = {2, 5};
  int[] a2 = {3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3460() {
  int[] a1 = {2, 5};
  int[] a2 = {4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3461() {
  int[] a1 = {2, 5};
  int[] a2 = {5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3462() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3463() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3464() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3465() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3466() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 3};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3467() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3468() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3469() {
  int[] a1 = {2, 5};
  int[] a2 = {3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3470() {
  int[] a1 = {2, 5};
  int[] a2 = {3, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3471() {
  int[] a1 = {2, 5};
  int[] a2 = {4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3472() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3473() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3474() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3475() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3476() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3477() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3478() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3479() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3480() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3481() {
  int[] a1 = {2, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3482() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3483() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3484() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3485() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3486() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3487() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3488() {
  int[] a1 = {3, 4};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3489() {
  int[] a1 = {3, 4};
  int[] a2 = {1};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3490() {
  int[] a1 = {3, 4};
  int[] a2 = {2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3491() {
  int[] a1 = {3, 4};
  int[] a2 = {3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3492() {
  int[] a1 = {3, 4};
  int[] a2 = {4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3493() {
  int[] a1 = {3, 4};
  int[] a2 = {5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3494() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3495() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3496() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3497() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3498() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3499() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3500() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3501() {
  int[] a1 = {3, 4};
  int[] a2 = {3, 4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3502() {
  int[] a1 = {3, 4};
  int[] a2 = {3, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3503() {
  int[] a1 = {3, 4};
  int[] a2 = {4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3504() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3505() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3506() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3507() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3508() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3509() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3510() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3511() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3512() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3513() {
  int[] a1 = {3, 4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3514() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3515() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3516() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3517() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3518() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3519() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3520() {
  int[] a1 = {3, 5};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3521() {
  int[] a1 = {3, 5};
  int[] a2 = {1};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3522() {
  int[] a1 = {3, 5};
  int[] a2 = {2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3523() {
  int[] a1 = {3, 5};
  int[] a2 = {3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3524() {
  int[] a1 = {3, 5};
  int[] a2 = {4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3525() {
  int[] a1 = {3, 5};
  int[] a2 = {5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3526() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3527() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3528() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3529() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3530() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3531() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3532() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3533() {
  int[] a1 = {3, 5};
  int[] a2 = {3, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3534() {
  int[] a1 = {3, 5};
  int[] a2 = {3, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3535() {
  int[] a1 = {3, 5};
  int[] a2 = {4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3536() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3537() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3538() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3539() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3540() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3541() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3542() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3543() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3544() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3545() {
  int[] a1 = {3, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3546() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3547() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3548() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3549() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3550() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3551() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3552() {
  int[] a1 = {4, 5};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3553() {
  int[] a1 = {4, 5};
  int[] a2 = {1};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3554() {
  int[] a1 = {4, 5};
  int[] a2 = {2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3555() {
  int[] a1 = {4, 5};
  int[] a2 = {3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3556() {
  int[] a1 = {4, 5};
  int[] a2 = {4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3557() {
  int[] a1 = {4, 5};
  int[] a2 = {5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3558() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3559() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3560() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3561() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3562() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3563() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3564() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3565() {
  int[] a1 = {4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3566() {
  int[] a1 = {4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3567() {
  int[] a1 = {4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3568() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3569() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3570() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3571() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3572() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3573() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3574() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3575() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3576() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3577() {
  int[] a1 = {4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3578() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3579() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3580() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3581() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3582() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3583() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3584() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3585() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3586() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3587() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3588() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3589() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3590() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3591() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3592() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3593() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3594() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3595() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3596() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3597() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {3, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3598() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {3, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3599() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3600() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3601() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3602() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3603() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3604() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3605() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3606() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3607() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3608() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3609() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3610() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3611() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3612() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3613() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3614() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3615() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3616() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3617() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3618() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3619() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3620() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3621() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3622() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3623() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 3};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3624() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3625() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3626() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 3};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3627() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3628() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3629() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {3, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3630() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3631() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3632() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3633() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3634() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3635() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3636() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3637() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3638() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3639() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3640() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3641() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3642() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3643() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3644() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3645() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3646() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3647() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3648() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3649() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3650() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3651() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3652() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3653() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3654() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3655() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3656() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3657() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3658() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 3};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3659() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3660() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3661() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3662() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {3, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3663() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3664() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3665() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3666() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3667() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3668() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3669() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3670() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3671() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3672() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3673() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3674() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3675() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3676() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3677() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3678() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3679() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3680() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3681() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3682() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3683() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3684() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3685() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3686() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3687() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3688() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3689() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3690() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3691() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3692() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3693() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {3, 4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3694() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {3, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3695() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3696() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3697() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3698() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3699() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3700() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3701() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3702() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3703() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3704() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3705() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3706() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3707() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3708() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3709() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3710() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3711() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3712() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3713() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3714() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3715() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3716() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3717() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3718() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3719() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3720() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3721() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3722() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3723() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3724() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3725() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {3, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3726() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {3, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3727() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3728() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3729() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3730() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3731() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3732() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3733() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3734() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3735() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3736() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3737() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3738() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3739() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3740() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3741() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3742() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3743() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3744() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3745() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3746() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3747() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3748() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3749() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3750() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3751() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3752() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3753() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3754() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3755() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3756() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3757() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3758() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3759() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3760() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3761() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3762() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3763() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3764() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3765() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3766() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3767() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3768() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3769() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3770() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3771() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3772() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3773() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3774() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3775() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3776() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3777() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3778() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3779() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3780() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3781() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3782() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3783() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3784() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3785() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3786() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3787() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3788() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3789() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {3, 4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3790() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {3, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3791() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3792() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3793() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3794() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3795() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3796() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3797() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3798() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3799() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3800() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3801() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3802() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3803() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3804() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3805() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3806() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3807() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3808() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3809() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3810() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3811() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3812() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3813() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3814() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3815() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3816() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3817() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3818() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3819() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3820() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3821() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {3, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3822() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {3, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3823() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3824() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3825() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3826() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3827() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3828() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3829() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3830() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3831() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3832() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3833() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3834() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3835() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3836() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3837() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3838() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3839() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3840() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3841() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3842() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3843() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3844() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3845() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3846() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3847() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3848() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3849() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3850() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3851() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3852() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3853() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3854() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3855() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3856() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3857() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3858() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3859() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3860() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3861() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3862() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3863() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3864() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3865() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3866() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3867() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3868() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3869() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3870() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3871() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3872() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3873() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3874() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3875() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3876() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3877() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3878() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3879() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3880() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3881() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3882() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3883() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3884() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3885() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3886() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3887() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3888() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3889() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3890() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3891() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3892() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3893() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3894() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3895() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3896() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3897() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3898() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3899() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3900() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3901() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3902() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3903() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3904() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3905() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3906() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3907() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3908() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3909() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3910() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3911() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3912() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3913() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3914() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3915() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3916() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3917() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {3, 4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3918() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {3, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3919() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {4, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3920() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3921() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3922() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3923() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3924() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3925() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3926() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3927() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3928() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3929() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3930() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3931() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3932() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3933() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3934() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3935() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3936() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3937() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3938() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3939() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3940() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3941() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3942() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3943() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3944() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3945() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3946() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3947() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3948() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3949() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {3, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3950() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {3, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3951() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {4, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3952() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3953() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3954() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3955() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3956() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3957() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3958() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3959() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3960() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3961() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3962() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3963() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3964() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3965() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3966() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3967() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3968() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3969() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3970() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3971() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3972() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3973() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3974() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3975() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3976() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3977() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3978() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3979() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3980() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3981() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3982() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3983() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3984() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3985() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3986() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3987() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3988() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3989() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3990() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3991() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3992() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3993() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3994() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3995() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3996() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3997() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3998() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test3999() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4000() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4001() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4002() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4003() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4004() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4005() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4006() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4007() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4008() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4009() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4010() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4011() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4012() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4013() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4014() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4015() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4016() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4017() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4018() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4019() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4020() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4021() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4022() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4023() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4024() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4025() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4026() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4027() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4028() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4029() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4030() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4031() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4032() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4033() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4034() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4035() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4036() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4037() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4038() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4039() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4040() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4041() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4042() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4043() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4044() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4045() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4046() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4047() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4048() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4049() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4050() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4051() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4052() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4053() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4054() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4055() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4056() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4057() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4058() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4059() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4060() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4061() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4062() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4063() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4064() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4065() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4066() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4067() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {3};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4068() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {4};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4069() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {5};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4070() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4071() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4072() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4073() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4074() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4075() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4076() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4077() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4078() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4079() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4080() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4081() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4082() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4083() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4084() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4085() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4086() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4087() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4088() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4089() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4090() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4091() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4092() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4093() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4094() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}
@Test
public void test4095() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.intersection(s1, s2), s3));
}

@Test
public void test4096() {
  int[] a1 = {};
  int[] a2 = {};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4097() {
  int[] a1 = {};
  int[] a2 = {1};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4098() {
  int[] a1 = {};
  int[] a2 = {2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4099() {
  int[] a1 = {};
  int[] a2 = {3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4100() {
  int[] a1 = {};
  int[] a2 = {4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4101() {
  int[] a1 = {};
  int[] a2 = {5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4102() {
  int[] a1 = {};
  int[] a2 = {1, 2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4103() {
  int[] a1 = {};
  int[] a2 = {1, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4104() {
  int[] a1 = {};
  int[] a2 = {1, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4105() {
  int[] a1 = {};
  int[] a2 = {1, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4106() {
  int[] a1 = {};
  int[] a2 = {2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4107() {
  int[] a1 = {};
  int[] a2 = {2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4108() {
  int[] a1 = {};
  int[] a2 = {2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4109() {
  int[] a1 = {};
  int[] a2 = {3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4110() {
  int[] a1 = {};
  int[] a2 = {3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4111() {
  int[] a1 = {};
  int[] a2 = {4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4112() {
  int[] a1 = {};
  int[] a2 = {1, 2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4113() {
  int[] a1 = {};
  int[] a2 = {1, 2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4114() {
  int[] a1 = {};
  int[] a2 = {1, 2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4115() {
  int[] a1 = {};
  int[] a2 = {1, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4116() {
  int[] a1 = {};
  int[] a2 = {1, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4117() {
  int[] a1 = {};
  int[] a2 = {1, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4118() {
  int[] a1 = {};
  int[] a2 = {2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4119() {
  int[] a1 = {};
  int[] a2 = {2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4120() {
  int[] a1 = {};
  int[] a2 = {2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4121() {
  int[] a1 = {};
  int[] a2 = {3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4122() {
  int[] a1 = {};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4123() {
  int[] a1 = {};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4124() {
  int[] a1 = {};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4125() {
  int[] a1 = {};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4126() {
  int[] a1 = {};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4127() {
  int[] a1 = {};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4128() {
  int[] a1 = {1};
  int[] a2 = {};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4129() {
  int[] a1 = {1};
  int[] a2 = {1};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4130() {
  int[] a1 = {1};
  int[] a2 = {2};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4131() {
  int[] a1 = {1};
  int[] a2 = {3};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4132() {
  int[] a1 = {1};
  int[] a2 = {4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4133() {
  int[] a1 = {1};
  int[] a2 = {5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4134() {
  int[] a1 = {1};
  int[] a2 = {1, 2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4135() {
  int[] a1 = {1};
  int[] a2 = {1, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4136() {
  int[] a1 = {1};
  int[] a2 = {1, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4137() {
  int[] a1 = {1};
  int[] a2 = {1, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4138() {
  int[] a1 = {1};
  int[] a2 = {2, 3};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4139() {
  int[] a1 = {1};
  int[] a2 = {2, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4140() {
  int[] a1 = {1};
  int[] a2 = {2, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4141() {
  int[] a1 = {1};
  int[] a2 = {3, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4142() {
  int[] a1 = {1};
  int[] a2 = {3, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4143() {
  int[] a1 = {1};
  int[] a2 = {4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4144() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4145() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4146() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4147() {
  int[] a1 = {1};
  int[] a2 = {1, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4148() {
  int[] a1 = {1};
  int[] a2 = {1, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4149() {
  int[] a1 = {1};
  int[] a2 = {1, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4150() {
  int[] a1 = {1};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4151() {
  int[] a1 = {1};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4152() {
  int[] a1 = {1};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4153() {
  int[] a1 = {1};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4154() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4155() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4156() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4157() {
  int[] a1 = {1};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4158() {
  int[] a1 = {1};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4159() {
  int[] a1 = {1};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4160() {
  int[] a1 = {2};
  int[] a2 = {};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4161() {
  int[] a1 = {2};
  int[] a2 = {1};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4162() {
  int[] a1 = {2};
  int[] a2 = {2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4163() {
  int[] a1 = {2};
  int[] a2 = {3};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4164() {
  int[] a1 = {2};
  int[] a2 = {4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4165() {
  int[] a1 = {2};
  int[] a2 = {5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4166() {
  int[] a1 = {2};
  int[] a2 = {1, 2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4167() {
  int[] a1 = {2};
  int[] a2 = {1, 3};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4168() {
  int[] a1 = {2};
  int[] a2 = {1, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4169() {
  int[] a1 = {2};
  int[] a2 = {1, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4170() {
  int[] a1 = {2};
  int[] a2 = {2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4171() {
  int[] a1 = {2};
  int[] a2 = {2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4172() {
  int[] a1 = {2};
  int[] a2 = {2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4173() {
  int[] a1 = {2};
  int[] a2 = {3, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4174() {
  int[] a1 = {2};
  int[] a2 = {3, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4175() {
  int[] a1 = {2};
  int[] a2 = {4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4176() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4177() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4178() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4179() {
  int[] a1 = {2};
  int[] a2 = {1, 3, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4180() {
  int[] a1 = {2};
  int[] a2 = {1, 3, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4181() {
  int[] a1 = {2};
  int[] a2 = {1, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4182() {
  int[] a1 = {2};
  int[] a2 = {2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4183() {
  int[] a1 = {2};
  int[] a2 = {2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4184() {
  int[] a1 = {2};
  int[] a2 = {2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4185() {
  int[] a1 = {2};
  int[] a2 = {3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4186() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4187() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4188() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4189() {
  int[] a1 = {2};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4190() {
  int[] a1 = {2};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4191() {
  int[] a1 = {2};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4192() {
  int[] a1 = {3};
  int[] a2 = {};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4193() {
  int[] a1 = {3};
  int[] a2 = {1};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4194() {
  int[] a1 = {3};
  int[] a2 = {2};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4195() {
  int[] a1 = {3};
  int[] a2 = {3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4196() {
  int[] a1 = {3};
  int[] a2 = {4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4197() {
  int[] a1 = {3};
  int[] a2 = {5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4198() {
  int[] a1 = {3};
  int[] a2 = {1, 2};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4199() {
  int[] a1 = {3};
  int[] a2 = {1, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4200() {
  int[] a1 = {3};
  int[] a2 = {1, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4201() {
  int[] a1 = {3};
  int[] a2 = {1, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4202() {
  int[] a1 = {3};
  int[] a2 = {2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4203() {
  int[] a1 = {3};
  int[] a2 = {2, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4204() {
  int[] a1 = {3};
  int[] a2 = {2, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4205() {
  int[] a1 = {3};
  int[] a2 = {3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4206() {
  int[] a1 = {3};
  int[] a2 = {3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4207() {
  int[] a1 = {3};
  int[] a2 = {4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4208() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4209() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4210() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4211() {
  int[] a1 = {3};
  int[] a2 = {1, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4212() {
  int[] a1 = {3};
  int[] a2 = {1, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4213() {
  int[] a1 = {3};
  int[] a2 = {1, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4214() {
  int[] a1 = {3};
  int[] a2 = {2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4215() {
  int[] a1 = {3};
  int[] a2 = {2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4216() {
  int[] a1 = {3};
  int[] a2 = {2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4217() {
  int[] a1 = {3};
  int[] a2 = {3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4218() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4219() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4220() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4221() {
  int[] a1 = {3};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4222() {
  int[] a1 = {3};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4223() {
  int[] a1 = {3};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4224() {
  int[] a1 = {4};
  int[] a2 = {};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4225() {
  int[] a1 = {4};
  int[] a2 = {1};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4226() {
  int[] a1 = {4};
  int[] a2 = {2};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4227() {
  int[] a1 = {4};
  int[] a2 = {3};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4228() {
  int[] a1 = {4};
  int[] a2 = {4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4229() {
  int[] a1 = {4};
  int[] a2 = {5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4230() {
  int[] a1 = {4};
  int[] a2 = {1, 2};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4231() {
  int[] a1 = {4};
  int[] a2 = {1, 3};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4232() {
  int[] a1 = {4};
  int[] a2 = {1, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4233() {
  int[] a1 = {4};
  int[] a2 = {1, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4234() {
  int[] a1 = {4};
  int[] a2 = {2, 3};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4235() {
  int[] a1 = {4};
  int[] a2 = {2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4236() {
  int[] a1 = {4};
  int[] a2 = {2, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4237() {
  int[] a1 = {4};
  int[] a2 = {3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4238() {
  int[] a1 = {4};
  int[] a2 = {3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4239() {
  int[] a1 = {4};
  int[] a2 = {4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4240() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4241() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4242() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4243() {
  int[] a1 = {4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4244() {
  int[] a1 = {4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4245() {
  int[] a1 = {4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4246() {
  int[] a1 = {4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4247() {
  int[] a1 = {4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4248() {
  int[] a1 = {4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4249() {
  int[] a1 = {4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4250() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4251() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4252() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4253() {
  int[] a1 = {4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4254() {
  int[] a1 = {4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4255() {
  int[] a1 = {4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4256() {
  int[] a1 = {5};
  int[] a2 = {};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4257() {
  int[] a1 = {5};
  int[] a2 = {1};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4258() {
  int[] a1 = {5};
  int[] a2 = {2};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4259() {
  int[] a1 = {5};
  int[] a2 = {3};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4260() {
  int[] a1 = {5};
  int[] a2 = {4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4261() {
  int[] a1 = {5};
  int[] a2 = {5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4262() {
  int[] a1 = {5};
  int[] a2 = {1, 2};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4263() {
  int[] a1 = {5};
  int[] a2 = {1, 3};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4264() {
  int[] a1 = {5};
  int[] a2 = {1, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4265() {
  int[] a1 = {5};
  int[] a2 = {1, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4266() {
  int[] a1 = {5};
  int[] a2 = {2, 3};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4267() {
  int[] a1 = {5};
  int[] a2 = {2, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4268() {
  int[] a1 = {5};
  int[] a2 = {2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4269() {
  int[] a1 = {5};
  int[] a2 = {3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4270() {
  int[] a1 = {5};
  int[] a2 = {3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4271() {
  int[] a1 = {5};
  int[] a2 = {4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4272() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4273() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4274() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4275() {
  int[] a1 = {5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4276() {
  int[] a1 = {5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4277() {
  int[] a1 = {5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4278() {
  int[] a1 = {5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4279() {
  int[] a1 = {5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4280() {
  int[] a1 = {5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4281() {
  int[] a1 = {5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4282() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4283() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4284() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4285() {
  int[] a1 = {5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4286() {
  int[] a1 = {5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4287() {
  int[] a1 = {5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4288() {
  int[] a1 = {1, 2};
  int[] a2 = {};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4289() {
  int[] a1 = {1, 2};
  int[] a2 = {1};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4290() {
  int[] a1 = {1, 2};
  int[] a2 = {2};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4291() {
  int[] a1 = {1, 2};
  int[] a2 = {3};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4292() {
  int[] a1 = {1, 2};
  int[] a2 = {4};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4293() {
  int[] a1 = {1, 2};
  int[] a2 = {5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4294() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4295() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 3};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4296() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4297() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4298() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 3};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4299() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4300() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4301() {
  int[] a1 = {1, 2};
  int[] a2 = {3, 4};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4302() {
  int[] a1 = {1, 2};
  int[] a2 = {3, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4303() {
  int[] a1 = {1, 2};
  int[] a2 = {4, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4304() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4305() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4306() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4307() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 3, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4308() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 3, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4309() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4310() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4311() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4312() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4313() {
  int[] a1 = {1, 2};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4314() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4315() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4316() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4317() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4318() {
  int[] a1 = {1, 2};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4319() {
  int[] a1 = {1, 2};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4320() {
  int[] a1 = {1, 3};
  int[] a2 = {};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4321() {
  int[] a1 = {1, 3};
  int[] a2 = {1};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4322() {
  int[] a1 = {1, 3};
  int[] a2 = {2};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4323() {
  int[] a1 = {1, 3};
  int[] a2 = {3};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4324() {
  int[] a1 = {1, 3};
  int[] a2 = {4};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4325() {
  int[] a1 = {1, 3};
  int[] a2 = {5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4326() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4327() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4328() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4329() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4330() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 3};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4331() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 4};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4332() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4333() {
  int[] a1 = {1, 3};
  int[] a2 = {3, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4334() {
  int[] a1 = {1, 3};
  int[] a2 = {3, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4335() {
  int[] a1 = {1, 3};
  int[] a2 = {4, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4336() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4337() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4338() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4339() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4340() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4341() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4342() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4343() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4344() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4345() {
  int[] a1 = {1, 3};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4346() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4347() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4348() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4349() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4350() {
  int[] a1 = {1, 3};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4351() {
  int[] a1 = {1, 3};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4352() {
  int[] a1 = {1, 4};
  int[] a2 = {};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4353() {
  int[] a1 = {1, 4};
  int[] a2 = {1};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4354() {
  int[] a1 = {1, 4};
  int[] a2 = {2};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4355() {
  int[] a1 = {1, 4};
  int[] a2 = {3};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4356() {
  int[] a1 = {1, 4};
  int[] a2 = {4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4357() {
  int[] a1 = {1, 4};
  int[] a2 = {5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4358() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4359() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 3};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4360() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4361() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4362() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 3};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4363() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4364() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4365() {
  int[] a1 = {1, 4};
  int[] a2 = {3, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4366() {
  int[] a1 = {1, 4};
  int[] a2 = {3, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4367() {
  int[] a1 = {1, 4};
  int[] a2 = {4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4368() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4369() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4370() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4371() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4372() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4373() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4374() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4375() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4376() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4377() {
  int[] a1 = {1, 4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4378() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4379() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4380() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4381() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4382() {
  int[] a1 = {1, 4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4383() {
  int[] a1 = {1, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4384() {
  int[] a1 = {1, 5};
  int[] a2 = {};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4385() {
  int[] a1 = {1, 5};
  int[] a2 = {1};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4386() {
  int[] a1 = {1, 5};
  int[] a2 = {2};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4387() {
  int[] a1 = {1, 5};
  int[] a2 = {3};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4388() {
  int[] a1 = {1, 5};
  int[] a2 = {4};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4389() {
  int[] a1 = {1, 5};
  int[] a2 = {5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4390() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4391() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 3};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4392() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4393() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4394() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 3};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4395() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 4};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4396() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4397() {
  int[] a1 = {1, 5};
  int[] a2 = {3, 4};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4398() {
  int[] a1 = {1, 5};
  int[] a2 = {3, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4399() {
  int[] a1 = {1, 5};
  int[] a2 = {4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4400() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4401() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4402() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4403() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4404() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4405() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4406() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4407() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4408() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4409() {
  int[] a1 = {1, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4410() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4411() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4412() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4413() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4414() {
  int[] a1 = {1, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4415() {
  int[] a1 = {1, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4416() {
  int[] a1 = {2, 3};
  int[] a2 = {};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4417() {
  int[] a1 = {2, 3};
  int[] a2 = {1};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4418() {
  int[] a1 = {2, 3};
  int[] a2 = {2};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4419() {
  int[] a1 = {2, 3};
  int[] a2 = {3};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4420() {
  int[] a1 = {2, 3};
  int[] a2 = {4};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4421() {
  int[] a1 = {2, 3};
  int[] a2 = {5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4422() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4423() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 3};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4424() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 4};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4425() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4426() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4427() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4428() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4429() {
  int[] a1 = {2, 3};
  int[] a2 = {3, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4430() {
  int[] a1 = {2, 3};
  int[] a2 = {3, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4431() {
  int[] a1 = {2, 3};
  int[] a2 = {4, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4432() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4433() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4434() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4435() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 3, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4436() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 3, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4437() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 4, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4438() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4439() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4440() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4441() {
  int[] a1 = {2, 3};
  int[] a2 = {3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4442() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4443() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4444() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4445() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4446() {
  int[] a1 = {2, 3};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4447() {
  int[] a1 = {2, 3};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4448() {
  int[] a1 = {2, 4};
  int[] a2 = {};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4449() {
  int[] a1 = {2, 4};
  int[] a2 = {1};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4450() {
  int[] a1 = {2, 4};
  int[] a2 = {2};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4451() {
  int[] a1 = {2, 4};
  int[] a2 = {3};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4452() {
  int[] a1 = {2, 4};
  int[] a2 = {4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4453() {
  int[] a1 = {2, 4};
  int[] a2 = {5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4454() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4455() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 3};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4456() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4457() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4458() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 3};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4459() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4460() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4461() {
  int[] a1 = {2, 4};
  int[] a2 = {3, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4462() {
  int[] a1 = {2, 4};
  int[] a2 = {3, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4463() {
  int[] a1 = {2, 4};
  int[] a2 = {4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4464() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4465() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4466() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4467() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4468() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4469() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4470() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4471() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4472() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4473() {
  int[] a1 = {2, 4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4474() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4475() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4476() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4477() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4478() {
  int[] a1 = {2, 4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4479() {
  int[] a1 = {2, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4480() {
  int[] a1 = {2, 5};
  int[] a2 = {};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4481() {
  int[] a1 = {2, 5};
  int[] a2 = {1};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4482() {
  int[] a1 = {2, 5};
  int[] a2 = {2};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4483() {
  int[] a1 = {2, 5};
  int[] a2 = {3};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4484() {
  int[] a1 = {2, 5};
  int[] a2 = {4};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4485() {
  int[] a1 = {2, 5};
  int[] a2 = {5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4486() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4487() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 3};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4488() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 4};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4489() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4490() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 3};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4491() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4492() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4493() {
  int[] a1 = {2, 5};
  int[] a2 = {3, 4};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4494() {
  int[] a1 = {2, 5};
  int[] a2 = {3, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4495() {
  int[] a1 = {2, 5};
  int[] a2 = {4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4496() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4497() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4498() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4499() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4500() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4501() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4502() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4503() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4504() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4505() {
  int[] a1 = {2, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4506() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4507() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4508() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4509() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4510() {
  int[] a1 = {2, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4511() {
  int[] a1 = {2, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4512() {
  int[] a1 = {3, 4};
  int[] a2 = {};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4513() {
  int[] a1 = {3, 4};
  int[] a2 = {1};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4514() {
  int[] a1 = {3, 4};
  int[] a2 = {2};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4515() {
  int[] a1 = {3, 4};
  int[] a2 = {3};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4516() {
  int[] a1 = {3, 4};
  int[] a2 = {4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4517() {
  int[] a1 = {3, 4};
  int[] a2 = {5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4518() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4519() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 3};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4520() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4521() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4522() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 3};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4523() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4524() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4525() {
  int[] a1 = {3, 4};
  int[] a2 = {3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4526() {
  int[] a1 = {3, 4};
  int[] a2 = {3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4527() {
  int[] a1 = {3, 4};
  int[] a2 = {4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4528() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4529() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4530() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4531() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4532() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4533() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4534() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4535() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4536() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4537() {
  int[] a1 = {3, 4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4538() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4539() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4540() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4541() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4542() {
  int[] a1 = {3, 4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4543() {
  int[] a1 = {3, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4544() {
  int[] a1 = {3, 5};
  int[] a2 = {};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4545() {
  int[] a1 = {3, 5};
  int[] a2 = {1};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4546() {
  int[] a1 = {3, 5};
  int[] a2 = {2};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4547() {
  int[] a1 = {3, 5};
  int[] a2 = {3};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4548() {
  int[] a1 = {3, 5};
  int[] a2 = {4};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4549() {
  int[] a1 = {3, 5};
  int[] a2 = {5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4550() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4551() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 3};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4552() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 4};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4553() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4554() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 3};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4555() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 4};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4556() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4557() {
  int[] a1 = {3, 5};
  int[] a2 = {3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4558() {
  int[] a1 = {3, 5};
  int[] a2 = {3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4559() {
  int[] a1 = {3, 5};
  int[] a2 = {4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4560() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4561() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4562() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4563() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4564() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4565() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4566() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4567() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4568() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4569() {
  int[] a1 = {3, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4570() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4571() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4572() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4573() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4574() {
  int[] a1 = {3, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4575() {
  int[] a1 = {3, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4576() {
  int[] a1 = {4, 5};
  int[] a2 = {};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4577() {
  int[] a1 = {4, 5};
  int[] a2 = {1};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4578() {
  int[] a1 = {4, 5};
  int[] a2 = {2};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4579() {
  int[] a1 = {4, 5};
  int[] a2 = {3};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4580() {
  int[] a1 = {4, 5};
  int[] a2 = {4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4581() {
  int[] a1 = {4, 5};
  int[] a2 = {5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4582() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4583() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4584() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4585() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4586() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4587() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4588() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4589() {
  int[] a1 = {4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4590() {
  int[] a1 = {4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4591() {
  int[] a1 = {4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4592() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4593() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4594() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4595() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4596() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4597() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4598() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4599() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4600() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4601() {
  int[] a1 = {4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4602() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4603() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4604() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4605() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4606() {
  int[] a1 = {4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4607() {
  int[] a1 = {4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4608() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4609() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4610() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4611() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {3};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4612() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {4};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4613() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {5};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4614() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4615() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 3};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4616() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 4};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4617() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4618() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 3};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4619() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 4};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4620() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4621() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {3, 4};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4622() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {3, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4623() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {4, 5};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4624() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 3};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4625() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4626() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4627() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 3, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4628() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 3, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4629() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 4, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4630() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4631() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4632() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4633() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4634() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4635() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4636() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4637() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4638() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4639() {
  int[] a1 = {1, 2, 3};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4640() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4641() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4642() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4643() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {3};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4644() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {4};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4645() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {5};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4646() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4647() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 3};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4648() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4649() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4650() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 3};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4651() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4652() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4653() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {3, 4};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4654() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {3, 5};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4655() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {4, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4656() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4657() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4658() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4659() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4660() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4661() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4662() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4663() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4664() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4665() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4666() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4667() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4668() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4669() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4670() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4671() {
  int[] a1 = {1, 2, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4672() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4673() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4674() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4675() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {3};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4676() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {4};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4677() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4678() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4679() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 3};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4680() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 4};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4681() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4682() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 3};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4683() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 4};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4684() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4685() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {3, 4};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4686() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {3, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4687() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {4, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4688() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4689() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4690() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4691() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4692() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4693() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4694() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4695() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4696() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4697() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4698() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4699() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4700() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4701() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4702() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4703() {
  int[] a1 = {1, 2, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4704() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4705() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4706() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4707() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {3};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4708() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {4};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4709() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {5};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4710() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4711() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 3};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4712() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4713() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4714() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 3};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4715() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 4};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4716() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 5};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4717() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {3, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4718() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {3, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4719() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {4, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4720() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4721() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4722() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4723() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4724() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4725() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4726() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4727() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4728() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4729() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4730() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4731() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4732() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4733() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4734() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4735() {
  int[] a1 = {1, 3, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4736() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4737() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4738() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4739() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {3};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4740() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {4};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4741() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4742() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4743() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 3};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4744() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 4};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4745() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4746() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 3};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4747() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 4};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4748() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4749() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {3, 4};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4750() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {3, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4751() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {4, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4752() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4753() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4754() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4755() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4756() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4757() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4758() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4759() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4760() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4761() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4762() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4763() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4764() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4765() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4766() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4767() {
  int[] a1 = {1, 3, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4768() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4769() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4770() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4771() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {3};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4772() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {4};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4773() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4774() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4775() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4776() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4777() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4778() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4779() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4780() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4781() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4782() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4783() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4784() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4785() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4786() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4787() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4788() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4789() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4790() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4791() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4792() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4793() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4794() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4795() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4796() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4797() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4798() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4799() {
  int[] a1 = {1, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4800() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4801() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4802() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4803() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {3};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4804() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {4};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4805() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {5};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4806() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4807() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 3};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4808() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 4};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4809() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 5};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4810() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 3};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4811() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4812() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4813() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {3, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4814() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {3, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4815() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {4, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4816() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4817() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4818() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4819() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4820() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4821() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4822() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4823() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4824() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4825() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4826() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4827() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4828() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4829() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4830() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4831() {
  int[] a1 = {2, 3, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4832() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4833() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4834() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4835() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {3};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4836() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {4};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4837() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4838() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4839() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 3};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4840() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 4};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4841() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4842() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 3};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4843() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 4};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4844() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4845() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {3, 4};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4846() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {3, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4847() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {4, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4848() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4849() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4850() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4851() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4852() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4853() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4854() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4855() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4856() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4857() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4858() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4859() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4860() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4861() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4862() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4863() {
  int[] a1 = {2, 3, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4864() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4865() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4866() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4867() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {3};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4868() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {4};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4869() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4870() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4871() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4872() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4873() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4874() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4875() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4876() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4877() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4878() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4879() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4880() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4881() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4882() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4883() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4884() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4885() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4886() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4887() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4888() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4889() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4890() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4891() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4892() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4893() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4894() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4895() {
  int[] a1 = {2, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4896() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4897() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4898() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4899() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {3};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4900() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {4};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4901() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4902() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4903() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4904() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4905() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4906() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4907() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4908() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4909() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4910() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4911() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4912() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4913() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4914() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4915() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4916() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4917() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4918() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4919() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4920() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4921() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4922() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4923() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4924() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4925() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4926() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4927() {
  int[] a1 = {3, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4928() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4929() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4930() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4931() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {3};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4932() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {4};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4933() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {5};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4934() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4935() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 3};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4936() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 4};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4937() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 5};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4938() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 3};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4939() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 4};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4940() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 5};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4941() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {3, 4};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4942() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {3, 5};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4943() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {4, 5};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4944() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 3};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4945() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 4};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4946() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4947() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 3, 4};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4948() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 3, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4949() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 4, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4950() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4951() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4952() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4953() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4954() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4955() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4956() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4957() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4958() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4959() {
  int[] a1 = {1, 2, 3, 4};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4960() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4961() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4962() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4963() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {3};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4964() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {4};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4965() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {5};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4966() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4967() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 3};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4968() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 4};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4969() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4970() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 3};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4971() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 4};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4972() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4973() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {3, 4};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4974() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {3, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4975() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {4, 5};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4976() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4977() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4978() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4979() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4980() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4981() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4982() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4983() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4984() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4985() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4986() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4987() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4988() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4989() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4990() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4991() {
  int[] a1 = {1, 2, 3, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4992() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4993() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4994() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4995() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {3};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4996() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {4};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4997() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {5};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4998() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test4999() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5000() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5001() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5002() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5003() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5004() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5005() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5006() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5007() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5008() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5009() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5010() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5011() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5012() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5013() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5014() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5015() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5016() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5017() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5018() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5019() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5020() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5021() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5022() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5023() {
  int[] a1 = {1, 2, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5024() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5025() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5026() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5027() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {3};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5028() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {4};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5029() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {5};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5030() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5031() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5032() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5033() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5034() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5035() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5036() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5037() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5038() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5039() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5040() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5041() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5042() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5043() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5044() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5045() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5046() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5047() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5048() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5049() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5050() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5051() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5052() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5053() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5054() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5055() {
  int[] a1 = {1, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5056() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5057() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5058() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5059() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {3};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5060() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {4};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5061() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {5};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5062() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5063() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5064() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5065() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5066() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5067() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5068() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5069() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5070() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5071() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5072() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5073() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5074() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5075() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5076() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5077() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5078() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5079() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5080() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5081() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5082() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5083() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5084() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5085() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5086() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5087() {
  int[] a1 = {2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5088() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {};
  int[] a3 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5089() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1};
  int[] a3 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5090() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2};
  int[] a3 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5091() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {3};
  int[] a3 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5092() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {4};
  int[] a3 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5093() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {5};
  int[] a3 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5094() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2};
  int[] a3 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5095() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 3};
  int[] a3 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5096() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 4};
  int[] a3 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5097() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 5};
  int[] a3 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5098() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 3};
  int[] a3 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5099() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 4};
  int[] a3 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5100() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 5};
  int[] a3 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5101() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {3, 4};
  int[] a3 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5102() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {3, 5};
  int[] a3 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5103() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {4, 5};
  int[] a3 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5104() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 3};
  int[] a3 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5105() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 4};
  int[] a3 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5106() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 5};
  int[] a3 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5107() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 3, 4};
  int[] a3 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5108() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 3, 5};
  int[] a3 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5109() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 4, 5};
  int[] a3 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5110() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 3, 4};
  int[] a3 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5111() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 3, 5};
  int[] a3 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5112() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 4, 5};
  int[] a3 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5113() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {3, 4, 5};
  int[] a3 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5114() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4};
  int[] a3 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5115() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 5};
  int[] a3 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5116() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 4, 5};
  int[] a3 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5117() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 3, 4, 5};
  int[] a3 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5118() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {2, 3, 4, 5};
  int[] a3 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}
@Test
public void test5119() {
  int[] a1 = {1, 2, 3, 4, 5};
  int[] a2 = {1, 2, 3, 4, 5};
  int[] a3 = {};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  IntSet s2 = IntSet.arrayToIntSet(a2);
  IntSet s3 = IntSet.arrayToIntSet(a3);
  Assert.assertTrue(IntSet.areEqual(IntSet.difference(s1, s2), s3));
}

@Test
public void test5121() {
  int[] a1 = {1};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{1}"));
}
@Test
public void test5122() {
  int[] a1 = {2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{2}"));
}
@Test
public void test5123() {
  int[] a1 = {3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{3}"));
}
@Test
public void test5124() {
  int[] a1 = {4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{4}"));
}
@Test
public void test5125() {
  int[] a1 = {5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{5}"));
}
@Test
public void test5126() {
  int[] a1 = {1, 2};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{1,2}"));
}
@Test
public void test5127() {
  int[] a1 = {1, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{1,3}"));
}
@Test
public void test5128() {
  int[] a1 = {1, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{1,4}"));
}
@Test
public void test5129() {
  int[] a1 = {1, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{1,5}"));
}
@Test
public void test5130() {
  int[] a1 = {2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{2,3}"));
}
@Test
public void test5131() {
  int[] a1 = {2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{2,4}"));
}
@Test
public void test5132() {
  int[] a1 = {2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{2,5}"));
}
@Test
public void test5133() {
  int[] a1 = {3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{3,4}"));
}
@Test
public void test5134() {
  int[] a1 = {3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{3,5}"));
}
@Test
public void test5135() {
  int[] a1 = {4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{4,5}"));
}
@Test
public void test5136() {
  int[] a1 = {1, 2, 3};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{1,2,3}"));
}
@Test
public void test5137() {
  int[] a1 = {1, 2, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{1,2,4}"));
}
@Test
public void test5138() {
  int[] a1 = {1, 2, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{1,2,5}"));
}
@Test
public void test5139() {
  int[] a1 = {1, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{1,3,4}"));
}
@Test
public void test5140() {
  int[] a1 = {1, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{1,3,5}"));
}
@Test
public void test5141() {
  int[] a1 = {1, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{1,4,5}"));
}
@Test
public void test5142() {
  int[] a1 = {2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{2,3,4}"));
}
@Test
public void test5143() {
  int[] a1 = {2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{2,3,5}"));
}
@Test
public void test5144() {
  int[] a1 = {2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{2,4,5}"));
}
@Test
public void test5145() {
  int[] a1 = {3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{3,4,5}"));
}
@Test
public void test5146() {
  int[] a1 = {1, 2, 3, 4};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{1,2,3,4}"));
}
@Test
public void test5147() {
  int[] a1 = {1, 2, 3, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{1,2,3,5}"));
}
@Test
public void test5148() {
  int[] a1 = {1, 2, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{1,2,4,5}"));
}
@Test
public void test5149() {
  int[] a1 = {1, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{1,3,4,5}"));
}
@Test
public void test5150() {
  int[] a1 = {2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{2,3,4,5}"));
}
@Test
public void test5151() {
  int[] a1 = {1, 2, 3, 4, 5};
  IntSet s1 = IntSet.arrayToIntSet(a1);
  Assert.assertTrue(s1.toString().equals("{1,2,3,4,5}"));
}




}
